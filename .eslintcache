[{"C:\\Users\\pillo\\recipebook\\src\\App.js":"1","C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js":"2","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js":"3","C:\\Users\\pillo\\recipebook\\src\\redux\\types.js":"4","C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js":"5","C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js":"6","C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js":"7","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js":"8","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\index.js":"9","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipe.js":"10","C:\\Users\\pillo\\recipebook\\src\\pages\\home.js":"11","C:\\Users\\pillo\\recipebook\\src\\pages\\newRecipes.js":"12","C:\\Users\\pillo\\recipebook\\src\\redux\\store.js":"13","C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js":"14","C:\\Users\\pillo\\recipebook\\src\\index.js":"15","C:\\Users\\pillo\\recipebook\\src\\components\\footer.js":"16","C:\\Users\\pillo\\recipebook\\src\\pages\\default.js":"17","C:\\Users\\pillo\\recipebook\\src\\pages\\about.js":"18","C:\\Users\\pillo\\recipebook\\src\\pages\\mainHomepage.js":"19","C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js":"20","C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js":"21","C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js":"22","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js":"23","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js":"24","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js":"25","C:\\Users\\pillo\\recipebook\\src\\redux\\combineActions.js":"26","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\user.js":"27","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\category.js":"28","C:\\Users\\pillo\\recipebook\\src\\routes\\loggedInRoute.js":"29","C:\\Users\\pillo\\recipebook\\src\\pages\\searchPage.js":"30"},{"size":1788,"mtime":1611498877195,"results":"31","hashOfConfig":"32"},{"size":773,"mtime":1611498877209,"results":"33","hashOfConfig":"32"},{"size":3549,"mtime":1611498877196,"results":"34","hashOfConfig":"32"},{"size":2155,"mtime":1611498877208,"results":"35","hashOfConfig":"32"},{"size":8006,"mtime":1611498877202,"results":"36","hashOfConfig":"32"},{"size":4719,"mtime":1611499497121,"results":"37","hashOfConfig":"32"},{"size":6275,"mtime":1611499497122,"results":"38","hashOfConfig":"32"},{"size":16734,"mtime":1611498877197,"results":"39","hashOfConfig":"32"},{"size":160,"mtime":1611498851813,"results":"40","hashOfConfig":"32"},{"size":4087,"mtime":1611500126637,"results":"41","hashOfConfig":"32"},{"size":3588,"mtime":1611545889468,"results":"42","hashOfConfig":"32"},{"size":3563,"mtime":1611545894076,"results":"43","hashOfConfig":"32"},{"size":1406,"mtime":1611498877207,"results":"44","hashOfConfig":"32"},{"size":3469,"mtime":1611498877198,"results":"45","hashOfConfig":"32"},{"size":306,"mtime":1611498851803,"results":"46","hashOfConfig":"32"},{"size":158,"mtime":1611498877198,"results":"47","hashOfConfig":"32"},{"size":412,"mtime":1611498877200,"results":"48","hashOfConfig":"32"},{"size":183,"mtime":1611498877199,"results":"49","hashOfConfig":"32"},{"size":1599,"mtime":1611498877201,"results":"50","hashOfConfig":"32"},{"size":1129,"mtime":1611498877196,"results":"51","hashOfConfig":"32"},{"size":706,"mtime":1611498877208,"results":"52","hashOfConfig":"32"},{"size":4631,"mtime":1611545787908,"results":"53","hashOfConfig":"32"},{"size":3047,"mtime":1611498877206,"results":"54","hashOfConfig":"32"},{"size":905,"mtime":1611498877206,"results":"55","hashOfConfig":"32"},{"size":930,"mtime":1611498877206,"results":"56","hashOfConfig":"32"},{"size":58,"mtime":1611498851814,"results":"57","hashOfConfig":"32"},{"size":1429,"mtime":1611498877205,"results":"58","hashOfConfig":"32"},{"size":1022,"mtime":1611498877204,"results":"59","hashOfConfig":"32"},{"size":774,"mtime":1611498877209,"results":"60","hashOfConfig":"32"},{"size":4852,"mtime":1611545903268,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xgjjn2",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pillo\\recipebook\\src\\App.js",["126"],"C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js",[],["127","128"],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\types.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js",["129","130","131"],"import React, { useEffect, useState } from 'react';\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { rbook } from '../redux/combineActions';\r\nimport { RECIPE_REVIEWS_ADD_RESET } from '../redux/types';\r\n\r\n//navigation\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material-ui\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst RecipeDetails = (props) => {\r\n  const [comment, setComment] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const recipeDetails = useSelector(state => state.recipeDetails);\r\n  const { user } = useSelector((state) => state.userSignin);\r\n  const { userInfo } = useSelector((state) => state.userRegister);\r\n  const {recipe, loading, error} = recipeDetails;\r\n  const { success: recipeReviewSave } = useSelector((state) => state.addReview);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipeReviewSave) {\r\n      setComment('');\r\n      dispatch({ type: RECIPE_REVIEWS_ADD_RESET });\r\n      setRating(0);\r\n    }\r\n    dispatch(rbook.recipe.detailsRecipe(props.match.params.id));\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipeReviewSave]);\r\n\r\n  const submitHandler = (e) => {\r\n  e.preventDefault();\r\n  // dispatch actions\r\n  if(user) {\r\n    dispatch(\r\n      rbook.recipe.saveRecipeReview(props.match.params.id, {\r\n        name: user.name,\r\n        rating: rating,\r\n        comment: comment,\r\n        userRole: user.role\r\n      })\r\n    );\r\n  } else {\r\n    dispatch(\r\n      rbook.recipe.saveRecipeReview(props.match.params.id, {\r\n        name: userInfo.name,\r\n        rating: rating,\r\n        comment: comment,\r\n        userRole: userInfo.role\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n    <div style = {{display: 'none'}}>{document.title=recipe.name}</div>\r\n     <center className = 'recipeName'>{recipe.name}</center>\r\n     <div className = 'details-container'>\r\n       <div className = 'card'>\r\n         <img\r\n           src={`/recipe/photo1/${recipe._id}`}\r\n           style={{ maxHeight: \"100%\", maxWidth: \"100%\", textAlign: 'center' }}\r\n           alt = {recipe.name}\r\n         />\r\n       </div>\r\n       <div style={{ maxWidth: \"30rem\", maxHeight: \"30rem\"  }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Description:</b></div>\r\n         <div>{recipe.description}</div>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\", marginTop: '1%' }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Ingredients:</b></div>\r\n         <li style = {{ display: recipe.ingredients ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients}</i></li>\r\n         <li style = {{ display: recipe.ingredients1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients1}</i></li>\r\n         <li style = {{ display: recipe.ingredients2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients2}</i></li>\r\n         <li style = {{ display: recipe.ingredients3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients3}</i></li>\r\n         <li style = {{ display: recipe.ingredients4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients4}</i></li>\r\n         <li style = {{ display: recipe.ingredients5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients5}</i></li>\r\n         <li style = {{ display: recipe.ingredients6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients6}</i></li>\r\n         <li style = {{ display: recipe.ingredients7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients7}</i></li>\r\n         <li style = {{ display: recipe.ingredients8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients8}</i></li>\r\n         <li style = {{ display: recipe.ingredients9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients9}</i></li>\r\n         <li style = {{ display: recipe.ingredients10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients10}</i></li>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\", marginTop: '1%' }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Instructions:</b></div>\r\n         <li style = {{ display: recipe.instruction ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction}</i></li>\r\n         <li style = {{ display: recipe.instruction1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction1}</i></li>\r\n         <li style = {{ display: recipe.instruction2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction2}</i></li>\r\n         <li style = {{ display: recipe.instruction3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction3}</i></li>\r\n         <li style = {{ display: recipe.instruction4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction4}</i></li>\r\n         <li style = {{ display: recipe.instruction5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction5}</i></li>\r\n         <li style = {{ display: recipe.instruction6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction6}</i></li>\r\n         <li style = {{ display: recipe.instruction7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction7}</i></li>\r\n         <li style = {{ display: recipe.instruction8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction8}</i></li>\r\n         <li style = {{ display: recipe.instruction9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction9}</i></li>\r\n         <li style = {{ display: recipe.instruction10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction10}</i></li>\r\n       </div>\r\n     </div>\r\n     <hr/>\r\n     <center className = 'welcomeTitle'>Rate this recipe</center>\r\n     <center><Rating\r\n       name=\"rating\"\r\n       id='rating'\r\n       value={rating}\r\n       onChange={(event, newValue) => {\r\n         setRating(newValue);\r\n       }}\r\n     />\r\n     <hr/></center>\r\n     <center className = 'welcomeTitle'>Write a comment here</center>\r\n     {userInfo || user ? (\r\n       <div  className = 'container'>\r\n         <form className = 'form-container' onSubmit = {submitHandler}>\r\n           <div class=\"form-group\">\r\n             <textarea\r\n              rows = '5'\r\n              type = \"text\"\r\n              className = \"form-control\"\r\n              placeholder = \"Do you have comments in this recipe? Write here.\"\r\n              required\r\n              name = 'comment'\r\n              id = 'comment'\r\n              value = {comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n             />\r\n           </div>\r\n           <Button variant=\"contained\" type=\"submit\">Comment</Button>\r\n         </form>\r\n       </div>\r\n     ) : (\r\n       <div>\r\n         Please <Link to=\"/\">Sign-in</Link> to write a reviews.\r\n       </div>\r\n     )}\r\n     <hr/>\r\n     <center>\r\n       <center className = 'welcomeTitle'>Reviews</center>\r\n       {recipe.reviews && recipe.reviews.length > 0 ? (\r\n         <div>\r\n           {recipe.reviews && recipe.reviews.map((review) => (\r\n             <div style = {{ marginTop: '1.5rem' }} key={review._id}>\r\n               { review.userRole === 1 ? (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name} (Admin)</b>\r\n               ) : (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name}</b>\r\n               ) }\r\n               <div><Rating readOnly value={review.rating}/></div>\r\n               <div style = {{ fontSize: '1.5rem' }} >{review.comment}</div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       ) : (\r\n         <h3>\r\n          There are no reviews in this recipe. Write the first one\r\n         </h3>\r\n       )}\r\n     </center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecipeDetails;\r\n","C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js",[],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js",["132","133"],"import React, { useEffect, useState } from 'react'\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { rbook } from '../redux/combineActions';\r\n\r\n//navigation\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material-ui\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n//styling for material-ui\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    marginTop: '1%',\r\n    marginBottom: '3%',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst CreateRecipe = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [ingredients1, setIngredients1] = useState('');\r\n  const [ingredients2, setIngredients2] = useState('');\r\n  const [ingredients3, setIngredients3] = useState('');\r\n  const [ingredients4, setIngredients4] = useState('');\r\n  const [ingredients5, setIngredients5] = useState('');\r\n  const [ingredients6, setIngredients6] = useState('');\r\n  const [ingredients7, setIngredients7] = useState('');\r\n  const [ingredients8, setIngredients8] = useState('');\r\n  const [ingredients9, setIngredients9] = useState('');\r\n  const [ingredients10, setIngredients10] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [instruction1, setInstruction1] = useState('');\r\n  const [instruction2, setInstruction2] = useState('');\r\n  const [instruction3, setInstruction3] = useState('');\r\n  const [instruction4, setInstruction4] = useState('');\r\n  const [instruction5, setInstruction5] = useState('');\r\n  const [instruction6, setInstruction6] = useState('');\r\n  const [instruction7, setInstruction7] = useState('');\r\n  const [instruction8, setInstruction8] = useState('');\r\n  const [instruction9, setInstruction9] = useState('');\r\n  const [instruction10, setInstruction10] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [photo1, setPhoto1] = useState('');\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n  const { loading, recipe, error, success } = useSelector(state => state.addRecipe);\r\n  const { categories } = useSelector(state => state.listCategories);\r\n\r\n  const recipeBy = user.name;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipe) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipe]);\r\n\r\n  useEffect(() => {\r\n    dispatch(rbook.category.listCategories());\r\n    return () => {\r\n    //\r\n    };\r\n  }, [])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const payload = {\r\n      name,\r\n      description,\r\n      category,\r\n      recipeBy,\r\n      ingredients,\r\n      ingredients1,\r\n      ingredients2,\r\n      ingredients3,\r\n      ingredients4,\r\n      ingredients5,\r\n      ingredients6,\r\n      ingredients7,\r\n      ingredients8,\r\n      ingredients9,\r\n      ingredients10,\r\n      instruction,\r\n      instruction1,\r\n      instruction2,\r\n      instruction3,\r\n      instruction4,\r\n      instruction5,\r\n      instruction6,\r\n      instruction7,\r\n      instruction8,\r\n      instruction9,\r\n      instruction10,\r\n      photo,\r\n      photo1\r\n    }\r\n    dispatch(rbook.recipe.addRecipe(payload));\r\n    setOpenSnackBar(true)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const showError = () => (\r\n    <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={openSnackBar} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert severity=\"error\">{error}</Alert>\r\n    </Snackbar>\r\n  );\r\n\r\n  const showSuccess= () => (\r\n    <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={openSnackBar} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert severity=\"success\">{recipe && recipe.name} added in recipes!</Alert>\r\n    </Snackbar>\r\n  );\r\n\r\n  const addRecipeForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Create new recipe here</center>\r\n    <div className = 'container'>\r\n      {success && !error && showSuccess()}\r\n      {!success && error && showError()}\r\n      <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Name of the recipe</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'name'\r\n            name = 'name'\r\n          />\r\n        </FormControl>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n           rows = '5'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           placeholder = \"Enter the description of the new recipe\"\r\n           required\r\n           name = 'description'\r\n           id = 'description'\r\n           onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" name = 'category' id = 'category' onChange={(e) => setCategory(e.target.value)}>\r\n            <option>Select category</option>\r\n            {categories &&\r\n             categories.map((c, i) => (\r\n               <option key={i} value={c._id}>\r\n                   {c.name}\r\n               </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 1 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'ingredients'\r\n            name = 'ingredients'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 2 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients1(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'ingredients1'\r\n            name = 'ingredients1'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 3 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients2(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'ingredients2'\r\n            name = 'ingredients2'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 4 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients3(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients3'\r\n            name = 'ingredients3'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 5 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients4(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients4'\r\n            name = 'ingredients4'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 6 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients5(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients5'\r\n            name = 'ingredients5'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 7 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients6(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients6'\r\n            name = 'ingredients6'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 8 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients7(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients7'\r\n            name = 'ingredients7'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 9 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients8(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients8'\r\n            name = 'ingredients8'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 10 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients9(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients9'\r\n            name = 'ingredients9'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 11 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients10(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'ingredients10'\r\n            name = 'ingredients10'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 1 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'instruction'\r\n            name = 'instruction'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 2 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction1(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'instruction1'\r\n            name = 'instruction1'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 3 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction2(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            required\r\n            id = 'instruction2'\r\n            name = 'instruction2'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 4 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction3(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction3'\r\n            name = 'instruction3'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 5 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction4(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction4'\r\n            name = 'instruction4'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 6 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction5(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction5'\r\n            name = 'instruction5'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 7 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction6(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction6'\r\n            name = 'instruction6'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 8 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction7(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction7'\r\n            name = 'instruction7'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 9 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction8(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction8'\r\n            name = 'instruction8'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 10 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction9(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction9'\r\n            name = 'instruction9'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 11 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction10(e.target.value)}\r\n            style = {{width: '100%'}}\r\n            id = 'instruction10'\r\n            name = 'instruction10'\r\n          />\r\n        </FormControl>\r\n        <div className={classes.root}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            name = 'photo'\r\n            onChange={(e) => setPhoto(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"photo1\"\r\n          type=\"file\"\r\n          name = 'photo1'\r\n          onChange={(e) => setPhoto1(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo1\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Details Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button startIcon={<SaveIcon />} variant=\"contained\" type=\"submit\">Save Recipe</Button>\r\n        <center style = {{marginTop: '1%', fontSize: 20}} ><Link className = 'adminLinks' to = '/admin'>Go back to admin page</Link></center>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  document.title = 'Recipebook | CreateRecipe'\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {addRecipeForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateRecipe;\r\n","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\index.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipe.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\home.js",["134"],"C:\\Users\\pillo\\recipebook\\src\\pages\\newRecipes.js",["135"],"C:\\Users\\pillo\\recipebook\\src\\redux\\store.js",[],["136","137"],"C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js",[],"C:\\Users\\pillo\\recipebook\\src\\index.js",[],"C:\\Users\\pillo\\recipebook\\src\\components\\footer.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\default.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\about.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\mainHomepage.js",[],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js",[],"C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\combineActions.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\user.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\category.js",[],"C:\\Users\\pillo\\recipebook\\src\\routes\\loggedInRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\searchPage.js",["138"],{"ruleId":"139","severity":1,"message":"140","line":34,"column":20,"nodeType":"141","endLine":35,"endColumn":9},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":36,"column":6,"nodeType":"148","endLine":36,"endColumn":24,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":79,"column":93,"nodeType":"152","endLine":79,"endColumn":123},{"ruleId":"150","severity":1,"message":"151","line":93,"column":93,"nodeType":"152","endLine":93,"endColumn":123},{"ruleId":"146","severity":1,"message":"153","line":95,"column":6,"nodeType":"148","endLine":95,"endColumn":8,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":183,"column":89,"nodeType":"152","endLine":183,"endColumn":104},{"ruleId":"146","severity":1,"message":"153","line":51,"column":6,"nodeType":"148","endLine":51,"endColumn":8,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"153","line":45,"column":6,"nodeType":"148","endLine":45,"endColumn":8,"suggestions":"156"},{"ruleId":"142","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"146","severity":1,"message":"159","line":78,"column":6,"nodeType":"148","endLine":78,"endColumn":24,"suggestions":"160"},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["163"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["164"],["165"],["166"],["161"],["162"],"React Hook useEffect has missing dependencies: 'history' and 'searchKeyword'. Either include them or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},{"desc":"170","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [dispatch, props.match.params.id, recipeReviewSave]",{"range":"176","text":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},{"range":"180","text":"179"},{"range":"181","text":"179"},"Update the dependencies array to be: [handleRecipeList, history, searchKeyword]",{"range":"182","text":"183"},[1229,1247],"[dispatch, props.match.params.id, recipeReviewSave]",[3259,3261],"[dispatch]",[1442,1444],[1297,1299],[2335,2353],"[handleRecipeList, history, searchKeyword]"]