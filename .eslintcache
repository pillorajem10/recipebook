[{"C:\\Users\\pillo\\recipebook\\src\\index.js":"1","C:\\Users\\pillo\\recipebook\\src\\redux\\store.js":"2","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js":"3","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipeActions.js":"4","C:\\Users\\pillo\\recipebook\\src\\pages\\home.js":"5","C:\\Users\\pillo\\recipebook\\src\\pages\\default.js":"6","C:\\Users\\pillo\\recipebook\\src\\App.js":"7","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\categoryActions.js":"8","C:\\Users\\pillo\\recipebook\\src\\components\\footer.js":"9","C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js":"10","C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js":"11","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js":"12","C:\\Users\\pillo\\recipebook\\src\\redux\\types.js":"13","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\userActions.js":"14","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js":"15","C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js":"16","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js":"17","C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js":"18","C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js":"19","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js":"20","C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js":"21","C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js":"22","C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js":"23","C:\\Users\\pillo\\recipebook\\src\\components\\searchRecipes.js":"24","C:\\Users\\pillo\\recipebook\\src\\pages\\about.js":"25"},{"size":306,"mtime":1609162126383,"results":"26","hashOfConfig":"27"},{"size":1297,"mtime":1610034922719,"results":"28","hashOfConfig":"27"},{"size":2340,"mtime":1609764243847,"results":"29","hashOfConfig":"27"},{"size":6485,"mtime":1610103593083,"results":"30","hashOfConfig":"27"},{"size":3612,"mtime":1609941538558,"results":"31","hashOfConfig":"27"},{"size":406,"mtime":1609765665724,"results":"32","hashOfConfig":"27"},{"size":1672,"mtime":1610034019280,"results":"33","hashOfConfig":"27"},{"size":1157,"mtime":1609162126387,"results":"34","hashOfConfig":"27"},{"size":213,"mtime":1609328031754,"results":"35","hashOfConfig":"27"},{"size":3406,"mtime":1609940469863,"results":"36","hashOfConfig":"27"},{"size":695,"mtime":1609162126390,"results":"37","hashOfConfig":"27"},{"size":1018,"mtime":1609162126388,"results":"38","hashOfConfig":"27"},{"size":2155,"mtime":1610028585829,"results":"39","hashOfConfig":"27"},{"size":1382,"mtime":1610022668478,"results":"40","hashOfConfig":"27"},{"size":14723,"mtime":1609764243848,"results":"41","hashOfConfig":"27"},{"size":5658,"mtime":1609925234122,"results":"42","hashOfConfig":"27"},{"size":1026,"mtime":1610022647192,"results":"43","hashOfConfig":"27"},{"size":7657,"mtime":1609337476974,"results":"44","hashOfConfig":"27"},{"size":706,"mtime":1609162126390,"results":"45","hashOfConfig":"27"},{"size":3539,"mtime":1610103539510,"results":"46","hashOfConfig":"27"},{"size":4144,"mtime":1609914369546,"results":"47","hashOfConfig":"27"},{"size":3776,"mtime":1610102189915,"results":"48","hashOfConfig":"27"},{"size":1082,"mtime":1609162126379,"results":"49","hashOfConfig":"27"},{"size":3241,"mtime":1610035167259,"results":"50","hashOfConfig":"27"},{"size":139,"mtime":1609162126384,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1xgjjn2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\pillo\\recipebook\\src\\index.js",[],["114","115"],"C:\\Users\\pillo\\recipebook\\src\\redux\\store.js",["116","117"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { recipeListReducer, recipeDetailsReducer, recipeAddReducer, recipeAddReviewsReducer, recipeListAllReducer, recipeListRateReducer, recipeSearchReducer } from './reducers/recipeReducers';\r\nimport { userRegisterReducer, userLoginReducer } from './reducers/userReducers';\r\nimport { categoryAddReducer, categoryListReducer } from './reducers/categoryReducers'\r\nimport Cookie from 'js-cookie';\r\n\r\nconst user = localStorage.getItem('jwt') && Cookie.getJSON('user') || null;\r\n\r\nconst initialState = {\r\n  userSignin: { user },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  recipeList: recipeListReducer,\r\n  recipeRate: recipeListRateReducer,\r\n  recipeListAll: recipeListAllReducer,\r\n  recipeSearch: recipeSearchReducer,\r\n  recipeDetails: recipeDetailsReducer,\r\n  userRegister: userRegisterReducer,\r\n  userSignin: userLoginReducer,\r\n  addCategory: categoryAddReducer,\r\n  listCategories: categoryListReducer,\r\n  addRecipe: recipeAddReducer,\r\n  addReview: recipeAddReviewsReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipeActions.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\home.js",["118","119","120","121"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listRateRecipes } from '../redux/actions/recipeActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxHeight: \"100%\",\r\n    maxWidth: \"32rem\",\r\n    marginTop: '2rem'\r\n  },\r\n});\r\n\r\nconst Home = (props) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const recipeRate = useSelector(state => state.recipeRate);\r\n  const { recipes, loading, error } = recipeRate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n\r\n  useEffect(() => {\r\n    dispatch(listRateRecipes());\r\n    return () => {\r\n    //\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n      {user ? (\r\n         <>\r\n           <center className = 'welcomeTitle'>Here our most popular recipes</center>\r\n         </>\r\n       ) : (\r\n      null\r\n      )}\r\n      <div className = 'container'>\r\n      { recipes.length > 0 ? (\r\n        <>\r\n          {\r\n           recipes.map( recipes =>\r\n            <Card data-aos = 'fade-up' className={classes.root}>\r\n               <CardMedia\r\n                 component=\"img\"\r\n                 alt={recipes.name}\r\n                 height=\"500\"\r\n                 image={`/recipe/photo/${recipes._id}`}\r\n                 title=\"Contemplative Reptile\"\r\n               />\r\n               <CardContent>\r\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                   {recipes.name}\r\n                 </Typography>\r\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   {recipes.description}\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   <Rating readOnly value={recipes.finalRating}/> <div style = {{fontSize: \"1.5rem\"}}>{recipes.rating.toFixed(1)}</div>\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    <div style = {{fontSize: \"1rem\"}}>Number of reviews: {recipes.numReviews}</div>\r\n                 </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                 <Link to = {`/recipe/${recipes._id}`}>\r\n                   <Button size=\"small\" color=\"primary\">\r\n                     Learn More\r\n                   </Button>\r\n                 </Link>\r\n               </CardActions>\r\n             </Card>\r\n            )\r\n           }\r\n         </>\r\n      ) : (\r\n        <div style = {{fontSize: '4rem'}} >No recipes found</div>\r\n      ) }\r\n      </div>\r\n      <center>\r\n        <Button style = {{marginTop:'3%'}} variant=\"contained\" color=\"primary\" href=\"/recipes\">\r\n          View All recipes\r\n        </Button>\r\n      </center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n",["122","123"],"C:\\Users\\pillo\\recipebook\\src\\pages\\default.js",[],"C:\\Users\\pillo\\recipebook\\src\\App.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\categoryActions.js",[],"C:\\Users\\pillo\\recipebook\\src\\components\\footer.js",["124"],"import React from 'react'\r\nimport { BottomNavigation } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className = 'footer' >All rights reserved.</div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js",["125","126","127","128"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listAllRecipes } from '../redux/actions/recipeActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxHeight: \"100%\",\r\n    maxWidth: \"32rem\",\r\n    marginTop: '2rem'\r\n  },\r\n});\r\n\r\nconst AllRecipe = (props) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const recipeListAll = useSelector(state => state.recipeListAll);\r\n  const { recipes, loading, error } = recipeListAll;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n\r\n  useEffect(() => {\r\n    dispatch(listAllRecipes());\r\n    return () => {\r\n    //\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n      {user ? (\r\n         <>\r\n           <center className = 'welcomeTitle'>All recipes</center>\r\n         </>\r\n       ) : (\r\n      null\r\n      )}\r\n      <div className = 'container'>\r\n      { recipes.length > 0 ? (\r\n        <>\r\n          {\r\n           recipes.map( recipes =>\r\n            <Card className={classes.root}>\r\n               <CardMedia\r\n                 component=\"img\"\r\n                 alt={recipes.name}\r\n                 height=\"500\"\r\n                 image={`/recipe/photo/${recipes._id}`}\r\n                 title=\"Contemplative Reptile\"\r\n               />\r\n               <CardContent>\r\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                   {recipes.name}\r\n                 </Typography>\r\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   {recipes.description}\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   <Rating readOnly value={recipes.rating}/> <div style = {{fontSize: \"1.5rem\"}}>{recipes.rating.toFixed(1)}</div>\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    <div style = {{fontSize: \"1rem\"}}>Number of reviews: {recipes.numReviews}</div>\r\n                 </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                 <Link to = {`/recipe/${recipes._id}`}>\r\n                   <Button size=\"small\" color=\"primary\">\r\n                     Learn More\r\n                   </Button>\r\n                 </Link>\r\n               </CardActions>\r\n             </Card>\r\n            )\r\n           }\r\n         </>\r\n      ) : (\r\n        <div style = {{fontSize: '4rem'}} >No recipes found</div>\r\n      ) }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllRecipe;\r\n","C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\types.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js",["129","130","131","132"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listCategories } from '../redux/actions/categoryActions';\r\nimport { addRecipe } from '../redux/actions/recipeActions'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst CreateRecipe = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [ingredients1, setIngredients1] = useState('');\r\n  const [ingredients2, setIngredients2] = useState('');\r\n  const [ingredients3, setIngredients3] = useState('');\r\n  const [ingredients4, setIngredients4] = useState('');\r\n  const [ingredients5, setIngredients5] = useState('');\r\n  const [ingredients6, setIngredients6] = useState('');\r\n  const [ingredients7, setIngredients7] = useState('');\r\n  const [ingredients8, setIngredients8] = useState('');\r\n  const [ingredients9, setIngredients9] = useState('');\r\n  const [ingredients10, setIngredients10] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [instruction1, setInstruction1] = useState('');\r\n  const [instruction2, setInstruction2] = useState('');\r\n  const [instruction3, setInstruction3] = useState('');\r\n  const [instruction4, setInstruction4] = useState('');\r\n  const [instruction5, setInstruction5] = useState('');\r\n  const [instruction6, setInstruction6] = useState('');\r\n  const [instruction7, setInstruction7] = useState('');\r\n  const [instruction8, setInstruction8] = useState('');\r\n  const [instruction9, setInstruction9] = useState('');\r\n  const [instruction10, setInstruction10] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [photo1, setPhoto1] = useState('');\r\n\r\n  const { loading, recipe, error, success } = useSelector(state => state.addRecipe);\r\n  const { categories } = useSelector(state => state.listCategories);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipe) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipe]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n    return () => {\r\n    //\r\n    };\r\n  }, [])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addRecipe(\r\n      name,\r\n      description,\r\n      category,\r\n      instruction,\r\n      instruction1,\r\n      instruction2,\r\n      instruction3,\r\n      instruction4,\r\n      instruction5,\r\n      instruction6,\r\n      instruction7,\r\n      instruction8,\r\n      instruction9,\r\n      instruction10,\r\n      ingredients,\r\n      ingredients1,\r\n      ingredients2,\r\n      ingredients3,\r\n      ingredients4,\r\n      ingredients5,\r\n      ingredients6,\r\n      ingredients7,\r\n      ingredients8,\r\n      ingredients9,\r\n      ingredients10,\r\n      photo,\r\n      photo1\r\n    ));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n          style={{ display: error ? '' : 'none' }}\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <center className=\"errorBox text-info\" style={{ display: success ? '' : 'none' }}>\r\n      {recipe.name} recipe created!\r\n    </center>\r\n  );\r\n\r\n  const addRecipeForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Create new recipe here</center>\r\n    <div className = 'container'>\r\n      <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter the name of the new recipe'\r\n           required\r\n           name = 'name'\r\n           id = 'name'\r\n           onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n           rows = '5'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           placeholder = \"Enter the description of the new recipe\"\r\n           required\r\n           name = 'description'\r\n           id = 'description'\r\n           onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" name = 'category' id = 'category' onChange={(e) => setCategory(e.target.value)}>\r\n            <option>Select category</option>\r\n            {categories &&\r\n             categories.map((c, i) => (\r\n               <option key={i} value={c._id}>\r\n                   {c.name}\r\n               </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 1 (required)'\r\n           name = 'ingredients'\r\n           id = 'ingredients'\r\n           onChange={(e) => setIngredients(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 2 (required)'\r\n           name = 'ingredients1'\r\n           id = 'ingredients1'\r\n           onChange={(e) => setIngredients1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           label = 'Enter Ingredient 3 (required)'\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'ingredients2'\r\n           id = 'ingredients2'\r\n           onChange={(e) => setIngredients2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients3'\r\n           id = 'ingredients3'\r\n           label = 'Enter Ingredient 4 (if necessary)'\r\n           onChange={(e) => setIngredients3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients4'\r\n           label = 'Enter Ingredient 5 (if necessary)'\r\n           id = 'ingredients4'\r\n           onChange={(e) => setIngredients4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 6 (if necessary)'\r\n           name = 'ingredients5'\r\n           id = 'ingredients5'\r\n           onChange={(e) => setIngredients5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 7 (if necessary)'\r\n           name = 'ingredients6'\r\n           id = 'ingredients6'\r\n           onChange={(e) => setIngredients6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 8 (if necessary)'\r\n           name = 'ingredients7'\r\n           id = 'ingredients7'\r\n           onChange={(e) => setIngredients7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 9 (if necessary)'\r\n           name = 'ingredients8'\r\n           id = 'ingredients8'\r\n           onChange={(e) => setIngredients8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 10 (if necessary)'\r\n           name = 'ingredients9'\r\n           id = 'ingredients9'\r\n           onChange={(e) => setIngredients9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 11 (if necessary)'\r\n           name = 'ingredients10'\r\n           id = 'ingredients10'\r\n           onChange={(e) => setIngredients10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'instruction'\r\n           label = 'Enter Instruction 1 (required)'\r\n           id = 'instruction'\r\n           onChange={(e) => setInstruction(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 2 (required)'\r\n           required\r\n           name = 'instruction1'\r\n           id = 'instruction1'\r\n           onChange={(e) => setInstruction1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 3 (required)'\r\n           required\r\n           name = 'instruction2'\r\n           id = 'instruction2'\r\n           onChange={(e) => setInstruction2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'instruction3'\r\n           label = 'Enter Instruction 4 (if necessary)'\r\n           id = 'instruction3'\r\n           onChange={(e) => setInstruction3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 5 (if necessary)'\r\n           name = 'instruction4'\r\n           id = 'instruction4'\r\n           onChange={(e) => setInstruction4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 6 (if necessary)'\r\n           name = 'instruction5'\r\n           id = 'instruction5'\r\n           onChange={(e) => setInstruction5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 7 (if necessary)'\r\n           name = 'instruction6'\r\n           id = 'instruction6'\r\n           onChange={(e) => setInstruction6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 8 (if necessary)'\r\n           name = 'instruction7'\r\n           id = 'instruction7'\r\n           onChange={(e) => setInstruction7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 9 (if necessary)'\r\n           name = 'instruction8'\r\n           id = 'instruction8'\r\n           onChange={(e) => setInstruction8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 10 (if necessary)'\r\n           name = 'instruction9'\r\n           id = 'instruction9'\r\n           onChange={(e) => setInstruction9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 11 (if necessary)'\r\n           name = 'instruction10'\r\n           id = 'instruction10'\r\n           onChange={(e) => setInstruction10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            name = 'photo'\r\n            onChange={(e) => setPhoto(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"photo1\"\r\n          type=\"file\"\r\n          name = 'photo1'\r\n          onChange={(e) => setPhoto1(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo1\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Details Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button startIcon={<SaveIcon />} variant=\"contained\" type=\"submit\">Save Recipe</Button>\r\n        <center style = {{marginTop: '1%', fontSize: 20}} ><Link className = 'adminLinks' to = '/admin'>Go back to admin page</Link></center>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {addRecipeForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateRecipe;\r\n","C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js",["133"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../redux/actions/userActions';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Input from '@material-ui/core/Input';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginTop:'3%',\r\n  },\r\n}));\r\n\r\nconst Signup = (props) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n      name: '',\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: '',\r\n      showPassword: false,\r\n      showPassword2: false\r\n  });\r\n  const { loading, user, error, success } = useSelector(state => state.userRegister);\r\n  const dispatch = useDispatch();\r\n\r\n  const { name, email, password, password2 } = values;\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [user]);\r\n\r\n  const handleChange = name => event => {\r\n      setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleClickShowPassword2 = () => {\r\n    setValues({ ...values, showPassword2: !values.showPassword2 });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(register(name, email, password, password2));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess= () => (\r\n    <center className=\"errorBox\" style={{ display: success ? '' : 'none' }}>\r\n        New account is created. You may now <Link style = {{color: 'blue', textDecoration:'none'}} to='/'>Sign In</Link>\r\n    </center>\r\n  );\r\n\r\n  const signUpForm = () => (\r\n    <>\r\n      <center className = 'welcomeTitle'>Sign Up here</center>\r\n      <div className = 'container'>\r\n        <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color = 'secondary' >Full Name</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"name\"\r\n            type='text'\r\n            required\r\n            value={values.name}\r\n            onChange={handleChange('name')}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color = 'secondary' >Email</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"email\"\r\n            type='text'\r\n            required\r\n            value={values.email}\r\n            onChange={handleChange('email')}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color = 'secondary' >Password</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            required\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color = 'secondary' >Confirm Password</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"password\"\r\n            type={values.showPassword2 ? 'text' : 'password'}\r\n            value={values.password2}\r\n            required\r\n            onChange={handleChange('password2')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword2}\r\n                >\r\n                  {values.showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n          <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign Up</Button>\r\n          <div style = {{marginTop: '5%', fontSize:20}}>Have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/'>Sign In</Link></div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {signUpForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js",[],["134","135"],"C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js",["136","137","138"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsRecipe, saveRecipeReview } from '../redux/actions/recipeActions';\r\nimport { RECIPE_REVIEWS_ADD_RESET } from '../redux/types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst RecipeDetails = (props) => {\r\n  const [comment, setComment] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const recipeDetails = useSelector(state => state.recipeDetails);\r\n  const { user } = useSelector((state) => state.userSignin);\r\n  const {recipe, loading, error} = recipeDetails;\r\n  const recipeReviewSave = useSelector((state) => state.addReview);\r\n  const { success: recipeSaveSuccess } = recipeReviewSave;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipeSaveSuccess) {\r\n      alert('Comment successfully added.');\r\n      setComment('');\r\n      dispatch({ type: RECIPE_REVIEWS_ADD_RESET });\r\n    }\r\n    dispatch(detailsRecipe(props.match.params.id));\r\n    return () => {\r\n    //\r\n    };\r\n  }, [recipeSaveSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n  e.preventDefault();\r\n  // dispatch actions\r\n  dispatch(\r\n    saveRecipeReview(props.match.params.id, {\r\n      name: user.name,\r\n      rating: rating,\r\n      comment: comment,\r\n      userRole: user.role\r\n    })\r\n  );\r\n};\r\n\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n     <center className = 'recipeName'>{recipe.name}</center>\r\n     <div className = 'details-container'>\r\n       <div className = 'card'>\r\n         <img\r\n           src={`/recipe/photo1/${recipe._id}`}\r\n           style={{ maxHeight: \"100%\", maxWidth: \"100%\", textAlign: 'center' }}\r\n           alt = {recipe.name}\r\n         />\r\n       </div>\r\n       <div style={{ maxWidth: \"30rem\", maxHeight: \"30rem\"  }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Description:</b></div>\r\n         <div>{recipe.description}</div>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\" }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Ingredients:</b></div>\r\n         <li style = {{ display: recipe.ingredients ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients}</i></li>\r\n         <li style = {{ display: recipe.ingredients1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients1}</i></li>\r\n         <li style = {{ display: recipe.ingredients2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients2}</i></li>\r\n         <li style = {{ display: recipe.ingredients3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients3}</i></li>\r\n         <li style = {{ display: recipe.ingredients4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients4}</i></li>\r\n         <li style = {{ display: recipe.ingredients5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients5}</i></li>\r\n         <li style = {{ display: recipe.ingredients6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients6}</i></li>\r\n         <li style = {{ display: recipe.ingredients7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients7}</i></li>\r\n         <li style = {{ display: recipe.ingredients8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients8}</i></li>\r\n         <li style = {{ display: recipe.ingredients9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients9}</i></li>\r\n         <li style = {{ display: recipe.ingredients10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients10}</i></li>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\" }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Instructions:</b></div>\r\n         <li style = {{ display: recipe.instruction ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction}</i></li>\r\n         <li style = {{ display: recipe.instruction1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction1}</i></li>\r\n         <li style = {{ display: recipe.instruction2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction2}</i></li>\r\n         <li style = {{ display: recipe.instruction3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction3}</i></li>\r\n         <li style = {{ display: recipe.instruction4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction4}</i></li>\r\n         <li style = {{ display: recipe.instruction5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction5}</i></li>\r\n         <li style = {{ display: recipe.instruction6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction6}</i></li>\r\n         <li style = {{ display: recipe.instruction7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction7}</i></li>\r\n         <li style = {{ display: recipe.instruction8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction8}</i></li>\r\n         <li style = {{ display: recipe.instruction9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction9}</i></li>\r\n         <li style = {{ display: recipe.instruction10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction10}</i></li>\r\n       </div>\r\n     </div>\r\n     <hr/>\r\n     <center>\r\n       <center className = 'welcomeTitle'>Reviews</center>\r\n       {recipe.reviews && recipe.reviews.length > 0 ? (\r\n         <div>\r\n           {recipe.reviews && recipe.reviews.map((review) => (\r\n             <div style = {{ marginTop: '1.5rem' }} key={review._id}>\r\n               { review.userRole === 1 ? (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name} (Admin)</b>\r\n               ) : (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name}</b>\r\n               ) }\r\n               <div><Rating readOnly value={review.rating}/></div>\r\n               <div style = {{ fontSize: '1.5rem' }} >{review.comment}</div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       ) : (\r\n         <h3>\r\n          There are no reviews in this recipe. Write the first one\r\n         </h3>\r\n       )}\r\n       <hr/>\r\n       <center className = 'welcomeTitle'>Rate this recipe</center>\r\n       <Rating\r\n         name=\"rating\"\r\n         id='rating'\r\n         value={rating}\r\n         onChange={(event, newValue) => {\r\n           setRating(newValue);\r\n         }}\r\n       />\r\n       <hr/>\r\n       <center className = 'welcomeTitle'>Write a comment here</center>\r\n       {user ? (\r\n         <div  className = 'container'>\r\n           <form className = 'form-container' onSubmit = {submitHandler}>\r\n             <div class=\"form-group\">\r\n               <textarea\r\n                rows = '5'\r\n                type = \"text\"\r\n                className = \"form-control\"\r\n                placeholder = \"Do you have comments in this recipe? Write here.\"\r\n                required\r\n                name = 'comment'\r\n                id = 'comment'\r\n                value = {comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n               />\r\n             </div>\r\n             <Button variant=\"contained\" type=\"submit\">Comment</Button>\r\n           </form>\r\n         </div>\r\n       ) : (\r\n         <div>\r\n           Please <Link to=\"/\">Sign-in</Link> to write a reviews.\r\n         </div>\r\n       )}\r\n     </center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecipeDetails;\r\n","C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js",["139"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../redux/actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Input from '@material-ui/core/Input';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginTop:'3%',\r\n  },\r\n}));\r\n\r\nconst Signin = (props) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n      showPassword: false,\r\n  });\r\n\r\n  const { loading, user, error } = useSelector(state => state.userSignin);\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/home';\r\n\r\n  const { email, password } = values;\r\n\r\n  useEffect (() => {\r\n    if(user){\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  },[user])\r\n\r\n  const handleChange = name => event => {\r\n      setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n  setValues({ ...values, showPassword: !values.showPassword });\r\n};\r\n\r\nconst handleMouseDownPassword = (event) => {\r\n  event.preventDefault();\r\n};\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const signInForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Sign In</center>\r\n    <div  className = 'container'>\r\n      <form className = 'form-container' onSubmit = {submitHandler}>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color = 'secondary' >Email</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"email\"\r\n            type='text'\r\n            required\r\n            value={values.email}\r\n            onChange={handleChange('email')}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}> \r\n          <InputLabel color = 'secondary' >Password</InputLabel>\r\n          <Input\r\n            color = 'secondary'\r\n            id=\"password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            required\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign In</Button>\r\n        <div style = {{marginTop: '5%', fontSize:20}}>Don't have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/signup'>Sign Up</Link></div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n      loading? <CircularProgress color = 'dark' className = 'loading' />  :\r\n      <>\r\n       {showError()}\r\n       {signInForm()}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js",["140","141","142","143","144","145","146"],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js",[],"C:\\Users\\pillo\\recipebook\\src\\components\\searchRecipes.js",["147","148","149","150","151","152"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listSearchRecipes } from '../redux/actions/recipeActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxHeight: \"100%\",\r\n    maxWidth: \"32rem\",\r\n    marginTop: '2rem'\r\n  },\r\n});\r\n\r\nconst SearchRecipes = (props) => {\r\n  const { recipes, loading, error } = useSelector(state => state.recipeSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n\r\n  useEffect(() => {\r\n    dispatch(listSearchRecipes());\r\n    return () => {\r\n    //\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n         <>\r\n           <center className = 'welcomeTitle'>Results</center>\r\n         </>\r\n       ) : (\r\n      null\r\n      )}\r\n      <div className = 'container'>\r\n      {recipes && recipes.length > 0 ? (\r\n        <>\r\n          {recipes &&\r\n           recipes.map( recipes =>\r\n            <Card className={classes.root}>\r\n               <CardMedia\r\n                 component=\"img\"\r\n                 alt={recipes.name}\r\n                 height=\"500\"\r\n                 image={`/recipe/photo/${recipes._id}`}\r\n                 title=\"Contemplative Reptile\"\r\n               />\r\n               <CardContent>\r\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                   {recipes.name}\r\n                 </Typography>\r\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   {recipes.description}\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   <Rating readOnly value={recipes.finalRating}/> <div style = {{fontSize: \"1.5rem\"}}>{recipes.rating.toFixed(1)}</div>\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    <div style = {{fontSize: \"1rem\"}}>Number of reviews: {recipes.numReviews}</div>\r\n                 </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                 <Link to = {`/recipe/${recipes._id}`}>\r\n                   <Button size=\"small\" color=\"primary\">\r\n                     Learn More\r\n                   </Button>\r\n                 </Link>\r\n               </CardActions>\r\n             </Card>\r\n            )\r\n           }\r\n         </>\r\n      ) : (\r\n        <div style = {{fontSize: '4rem'}} >No recipes found</div>\r\n      ) }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchRecipes;\r\n","C:\\Users\\pillo\\recipebook\\src\\pages\\about.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":8,"column":42,"nodeType":"159","messageId":"160","endLine":8,"endColumn":44},{"ruleId":"157","severity":1,"message":"158","line":8,"column":68,"nodeType":"159","messageId":"160","endLine":8,"endColumn":70},{"ruleId":"161","severity":1,"message":"162","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":22},{"ruleId":"161","severity":1,"message":"165","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":23},{"ruleId":"161","severity":1,"message":"166","line":26,"column":25,"nodeType":"163","messageId":"164","endLine":26,"endColumn":41},{"ruleId":"167","severity":1,"message":"168","line":41,"column":6,"nodeType":"169","endLine":41,"endColumn":8,"suggestions":"170"},{"ruleId":"153","replacedBy":"171"},{"ruleId":"155","replacedBy":"172"},{"ruleId":"161","severity":1,"message":"173","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":22},{"ruleId":"161","severity":1,"message":"165","line":25,"column":10,"nodeType":"163","messageId":"164","endLine":25,"endColumn":23},{"ruleId":"161","severity":1,"message":"166","line":25,"column":25,"nodeType":"163","messageId":"164","endLine":25,"endColumn":41},{"ruleId":"167","severity":1,"message":"168","line":40,"column":6,"nodeType":"169","endLine":40,"endColumn":8,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"175","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":18},{"ruleId":"161","severity":1,"message":"176","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":76,"column":6,"nodeType":"169","endLine":76,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":155,"column":89,"nodeType":"180","endLine":155,"endColumn":104},{"ruleId":"161","severity":1,"message":"181","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":17},{"ruleId":"153","replacedBy":"182"},{"ruleId":"155","replacedBy":"183"},{"ruleId":"167","severity":1,"message":"184","line":32,"column":6,"nodeType":"169","endLine":32,"endColumn":25,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"179","line":64,"column":76,"nodeType":"180","endLine":64,"endColumn":106},{"ruleId":"178","severity":1,"message":"179","line":78,"column":76,"nodeType":"180","endLine":78,"endColumn":106},{"ruleId":"167","severity":1,"message":"186","line":54,"column":5,"nodeType":"169","endLine":54,"endColumn":11,"suggestions":"187"},{"ruleId":"161","severity":1,"message":"188","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"189","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"190","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":11},{"ruleId":"161","severity":1,"message":"191","line":11,"column":27,"nodeType":"163","messageId":"164","endLine":11,"endColumn":41},{"ruleId":"161","severity":1,"message":"192","line":17,"column":8,"nodeType":"163","messageId":"164","endLine":17,"endColumn":14},{"ruleId":"161","severity":1,"message":"193","line":52,"column":9,"nodeType":"163","messageId":"164","endLine":52,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":77,"column":35,"nodeType":"196","endLine":77,"endColumn":54},{"ruleId":"161","severity":1,"message":"197","line":1,"column":28,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":22},{"ruleId":"161","severity":1,"message":"198","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":24},{"ruleId":"161","severity":1,"message":"199","line":26,"column":20,"nodeType":"163","messageId":"164","endLine":26,"endColumn":27},{"ruleId":"161","severity":1,"message":"200","line":26,"column":29,"nodeType":"163","messageId":"164","endLine":26,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":39,"column":6,"nodeType":"169","endLine":39,"endColumn":8,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'CardActionArea' is defined but never used.","Identifier","unusedVar","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["204"],["202"],["203"],"'BottomNavigation' is defined but never used.",["205"],"'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.",["206"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.",["202"],["203"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["208"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'listAllRecipes' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'CircularProgress' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"210","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"210","fix":"218"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},{"range":"221","text":"220"},{"range":"222","text":"220"},"Update the dependencies array to be: [dispatch, props.match.params.id, recipeSaveSuccess]",{"range":"223","text":"224"},"Update the dependencies array to be: [props.history, redirect, user]",{"range":"225","text":"226"},{"range":"227","text":"220"},[1335,1337],"[dispatch]",[1345,1347],[2862,2864],[1211,1230],"[dispatch, props.match.params.id, recipeSaveSuccess]",[1614,1620],"[props.history, redirect, user]",[1257,1259]]