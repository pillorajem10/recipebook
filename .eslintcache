[{"C:\\Users\\admin\\recipebook\\src\\index.js":"1","C:\\Users\\admin\\recipebook\\src\\App.js":"2","C:\\Users\\admin\\recipebook\\src\\redux\\store.js":"3","C:\\Users\\admin\\recipebook\\src\\pages\\about.js":"4","C:\\Users\\admin\\recipebook\\src\\pages\\default.js":"5","C:\\Users\\admin\\recipebook\\src\\pages\\signup.js":"6","C:\\Users\\admin\\recipebook\\src\\adminPage\\createCategory.js":"7","C:\\Users\\admin\\recipebook\\src\\adminPage\\adminPage.js":"8","C:\\Users\\admin\\recipebook\\src\\routes\\adminRoute.js":"9","C:\\Users\\admin\\recipebook\\src\\components\\footer.js":"10","C:\\Users\\admin\\recipebook\\src\\routes\\privateRoute.js":"11","C:\\Users\\admin\\recipebook\\src\\adminPage\\createRecipe.js":"12","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\userReducers.js":"13","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\categoryReducers.js":"14","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\recipeReducers.js":"15","C:\\Users\\admin\\recipebook\\src\\pages\\home.js":"16","C:\\Users\\admin\\recipebook\\src\\pages\\recipeDetails.js":"17","C:\\Users\\admin\\recipebook\\src\\pages\\signin.js":"18","C:\\Users\\admin\\recipebook\\src\\components\\navbar.js":"19","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\userActions.js":"20","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\categoryActions.js":"21","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\recipeActions.js":"22","C:\\Users\\admin\\recipebook\\src\\redux\\types.js":"23","C:\\Users\\admin\\recipebook\\src\\pages\\allRecipe.js":"24"},{"size":306,"mtime":1608890157261,"results":"25","hashOfConfig":"26"},{"size":1603,"mtime":1609418227003,"results":"27","hashOfConfig":"26"},{"size":1176,"mtime":1609405721219,"results":"28","hashOfConfig":"26"},{"size":139,"mtime":1608890157262,"results":"29","hashOfConfig":"26"},{"size":372,"mtime":1608890157262,"results":"30","hashOfConfig":"26"},{"size":3630,"mtime":1609353210077,"results":"31","hashOfConfig":"26"},{"size":2340,"mtime":1609353279471,"results":"32","hashOfConfig":"26"},{"size":1082,"mtime":1608890157258,"results":"33","hashOfConfig":"26"},{"size":706,"mtime":1608890157267,"results":"34","hashOfConfig":"26"},{"size":213,"mtime":1609338337861,"results":"35","hashOfConfig":"26"},{"size":695,"mtime":1608890157267,"results":"36","hashOfConfig":"26"},{"size":14723,"mtime":1609353391934,"results":"37","hashOfConfig":"26"},{"size":1026,"mtime":1608890157266,"results":"38","hashOfConfig":"26"},{"size":1018,"mtime":1608890157265,"results":"39","hashOfConfig":"26"},{"size":2528,"mtime":1609404932013,"results":"40","hashOfConfig":"26"},{"size":3014,"mtime":1609418232310,"results":"41","hashOfConfig":"26"},{"size":7657,"mtime":1609418312016,"results":"42","hashOfConfig":"26"},{"size":2704,"mtime":1609353239379,"results":"43","hashOfConfig":"26"},{"size":3792,"mtime":1609418481982,"results":"44","hashOfConfig":"26"},{"size":1382,"mtime":1608890157265,"results":"45","hashOfConfig":"26"},{"size":1157,"mtime":1608890157264,"results":"46","hashOfConfig":"26"},{"size":5457,"mtime":1609418864079,"results":"47","hashOfConfig":"26"},{"size":1761,"mtime":1609404870225,"results":"48","hashOfConfig":"26"},{"size":2842,"mtime":1609417840871,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6dwin1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\recipebook\\src\\index.js",[],["103","104"],"C:\\Users\\admin\\recipebook\\src\\App.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\store.js",["105","106"],"C:\\Users\\admin\\recipebook\\src\\pages\\about.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\default.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\signup.js",["107","108"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../redux/actions/userActions';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Signup = (props) => {\r\n\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const { loading, user, error, success } = useSelector(state => state.userRegister);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [user]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(register(name, email, password, password2));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess= () => (\r\n    <center className=\"errorBox\" style={{ display: success ? '' : 'none' }}>\r\n        New account is created. You may now <Link style = {{color: 'blue', textDecoration:'none'}} to='/'>Sign In</Link>\r\n    </center>\r\n  );\r\n\r\n  const signUpForm = () => (\r\n    <>\r\n      <center className = 'welcomeTitle'>Sign Up here</center>\r\n      <div className = 'container'>\r\n        <form onSubmit = {submitHandler} className = 'form-container'>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' id = 'name'\r\n              label=\"Full name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              name = 'name'\r\n              type = 'text'\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' color = 'secondary' id = 'email'\r\n              label=\"Email Address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              name = 'email'\r\n              type=\"text\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' id = 'password'\r\n              label=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              name = 'password'\r\n              type=\"password\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' color = 'secondary' id = 'password2'\r\n              label=\"Confirm Password\"\r\n              onChange={(e) => setPassword2(e.target.value)}\r\n              name = 'password2'\r\n              type=\"password\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign Up</Button>\r\n          <div style = {{marginTop: '5%', fontSize:20}}>Have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/'>Sign In</Link></div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {signUpForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\admin\\recipebook\\src\\adminPage\\createCategory.js",[],"C:\\Users\\admin\\recipebook\\src\\adminPage\\adminPage.js",[],"C:\\Users\\admin\\recipebook\\src\\routes\\adminRoute.js",[],"C:\\Users\\admin\\recipebook\\src\\components\\footer.js",["109"],"import React from 'react'\r\nimport { BottomNavigation } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className = 'footer' >All rights reserved.</div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\admin\\recipebook\\src\\routes\\privateRoute.js",[],"C:\\Users\\admin\\recipebook\\src\\adminPage\\createRecipe.js",["110","111","112","113"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listCategories } from '../redux/actions/categoryActions';\r\nimport { addRecipe } from '../redux/actions/recipeActions'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst CreateRecipe = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [ingredients1, setIngredients1] = useState('');\r\n  const [ingredients2, setIngredients2] = useState('');\r\n  const [ingredients3, setIngredients3] = useState('');\r\n  const [ingredients4, setIngredients4] = useState('');\r\n  const [ingredients5, setIngredients5] = useState('');\r\n  const [ingredients6, setIngredients6] = useState('');\r\n  const [ingredients7, setIngredients7] = useState('');\r\n  const [ingredients8, setIngredients8] = useState('');\r\n  const [ingredients9, setIngredients9] = useState('');\r\n  const [ingredients10, setIngredients10] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [instruction1, setInstruction1] = useState('');\r\n  const [instruction2, setInstruction2] = useState('');\r\n  const [instruction3, setInstruction3] = useState('');\r\n  const [instruction4, setInstruction4] = useState('');\r\n  const [instruction5, setInstruction5] = useState('');\r\n  const [instruction6, setInstruction6] = useState('');\r\n  const [instruction7, setInstruction7] = useState('');\r\n  const [instruction8, setInstruction8] = useState('');\r\n  const [instruction9, setInstruction9] = useState('');\r\n  const [instruction10, setInstruction10] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [photo1, setPhoto1] = useState('');\r\n\r\n  const { loading, recipe, error, success } = useSelector(state => state.addRecipe);\r\n  const { categories } = useSelector(state => state.listCategories);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipe) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipe]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n    return () => {\r\n    //\r\n    };\r\n  }, [])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addRecipe(\r\n      name,\r\n      description,\r\n      category,\r\n      instruction,\r\n      instruction1,\r\n      instruction2,\r\n      instruction3,\r\n      instruction4,\r\n      instruction5,\r\n      instruction6,\r\n      instruction7,\r\n      instruction8,\r\n      instruction9,\r\n      instruction10,\r\n      ingredients,\r\n      ingredients1,\r\n      ingredients2,\r\n      ingredients3,\r\n      ingredients4,\r\n      ingredients5,\r\n      ingredients6,\r\n      ingredients7,\r\n      ingredients8,\r\n      ingredients9,\r\n      ingredients10,\r\n      photo,\r\n      photo1\r\n    ));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n          style={{ display: error ? '' : 'none' }}\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <center className=\"errorBox text-info\" style={{ display: success ? '' : 'none' }}>\r\n      {recipe.name} recipe created!\r\n    </center>\r\n  );\r\n\r\n  const addRecipeForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Create new recipe here</center>\r\n    <div className = 'container'>\r\n      <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter the name of the new recipe'\r\n           required\r\n           name = 'name'\r\n           id = 'name'\r\n           onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n           rows = '5'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           placeholder = \"Enter the description of the new recipe\"\r\n           required\r\n           name = 'description'\r\n           id = 'description'\r\n           onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" name = 'category' id = 'category' onChange={(e) => setCategory(e.target.value)}>\r\n            <option>Select category</option>\r\n            {categories &&\r\n             categories.map((c, i) => (\r\n               <option key={i} value={c._id}>\r\n                   {c.name}\r\n               </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 1 (required)'\r\n           name = 'ingredients'\r\n           id = 'ingredients'\r\n           onChange={(e) => setIngredients(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 2 (required)'\r\n           name = 'ingredients1'\r\n           id = 'ingredients1'\r\n           onChange={(e) => setIngredients1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           label = 'Enter Ingredient 3 (required)'\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'ingredients2'\r\n           id = 'ingredients2'\r\n           onChange={(e) => setIngredients2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients3'\r\n           id = 'ingredients3'\r\n           label = 'Enter Ingredient 4 (if necessary)'\r\n           onChange={(e) => setIngredients3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients4'\r\n           label = 'Enter Ingredient 5 (if necessary)'\r\n           id = 'ingredients4'\r\n           onChange={(e) => setIngredients4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 6 (if necessary)'\r\n           name = 'ingredients5'\r\n           id = 'ingredients5'\r\n           onChange={(e) => setIngredients5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 7 (if necessary)'\r\n           name = 'ingredients6'\r\n           id = 'ingredients6'\r\n           onChange={(e) => setIngredients6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 8 (if necessary)'\r\n           name = 'ingredients7'\r\n           id = 'ingredients7'\r\n           onChange={(e) => setIngredients7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 9 (if necessary)'\r\n           name = 'ingredients8'\r\n           id = 'ingredients8'\r\n           onChange={(e) => setIngredients8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 10 (if necessary)'\r\n           name = 'ingredients9'\r\n           id = 'ingredients9'\r\n           onChange={(e) => setIngredients9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 11 (if necessary)'\r\n           name = 'ingredients10'\r\n           id = 'ingredients10'\r\n           onChange={(e) => setIngredients10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'instruction'\r\n           label = 'Enter Instruction 1 (required)'\r\n           id = 'instruction'\r\n           onChange={(e) => setInstruction(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 2 (required)'\r\n           required\r\n           name = 'instruction1'\r\n           id = 'instruction1'\r\n           onChange={(e) => setInstruction1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 3 (required)'\r\n           required\r\n           name = 'instruction2'\r\n           id = 'instruction2'\r\n           onChange={(e) => setInstruction2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'instruction3'\r\n           label = 'Enter Instruction 4 (if necessary)'\r\n           id = 'instruction3'\r\n           onChange={(e) => setInstruction3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 5 (if necessary)'\r\n           name = 'instruction4'\r\n           id = 'instruction4'\r\n           onChange={(e) => setInstruction4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 6 (if necessary)'\r\n           name = 'instruction5'\r\n           id = 'instruction5'\r\n           onChange={(e) => setInstruction5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 7 (if necessary)'\r\n           name = 'instruction6'\r\n           id = 'instruction6'\r\n           onChange={(e) => setInstruction6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 8 (if necessary)'\r\n           name = 'instruction7'\r\n           id = 'instruction7'\r\n           onChange={(e) => setInstruction7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 9 (if necessary)'\r\n           name = 'instruction8'\r\n           id = 'instruction8'\r\n           onChange={(e) => setInstruction8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 10 (if necessary)'\r\n           name = 'instruction9'\r\n           id = 'instruction9'\r\n           onChange={(e) => setInstruction9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 11 (if necessary)'\r\n           name = 'instruction10'\r\n           id = 'instruction10'\r\n           onChange={(e) => setInstruction10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            name = 'photo'\r\n            onChange={(e) => setPhoto(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"photo1\"\r\n          type=\"file\"\r\n          name = 'photo1'\r\n          onChange={(e) => setPhoto1(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo1\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Details Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button startIcon={<SaveIcon />} variant=\"contained\" type=\"submit\">Save Recipe</Button>\r\n        <center style = {{marginTop: '1%', fontSize: 20}} ><Link className = 'adminLinks' to = '/admin'>Go back to admin page</Link></center>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {addRecipeForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateRecipe;\r\n","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\userReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\categoryReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\recipeReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\home.js",["114","115","116","117"],"C:\\Users\\admin\\recipebook\\src\\pages\\recipeDetails.js",["118","119","120"],"C:\\Users\\admin\\recipebook\\src\\pages\\signin.js",["121"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../redux/actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField  from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Signin = (props) => {\r\n\r\n  const [values, setValues] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      redirectToReferrer: false\r\n  });\r\n\r\n  const { loading, user, error } = useSelector(state => state.userSignin);\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/home';\r\n\r\n\r\n  const { email, password } = values;\r\n\r\n  useEffect (() => {\r\n    if(user){\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  },[user])\r\n\r\n  const handleChange = name => event => {\r\n      setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const signInForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Sign In</center>\r\n    <div  className = 'container'>\r\n      <form className = 'form-container' onSubmit = {submitHandler}>\r\n        <div class=\"form-group\" style = {{ marginTop:'2%' }}>\r\n          <TextField color = 'secondary' type=\"email\"\r\n           name = 'email'\r\n           label = 'Email Address'\r\n           id = 'email'\r\n           style = {{width: '100%'}}\r\n           onChange={handleChange('email')}\r\n           required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\" style = {{ marginTop:'2%' }}>\r\n          <TextField color = 'secondary' type=\"password\"\r\n           name = 'password'\r\n           label = 'Password'\r\n           id = 'password'\r\n           style = {{width: '100%'}}\r\n           onChange={handleChange('password')}\r\n           required\r\n          />\r\n        </div>\r\n        <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign In</Button>\r\n        <div style = {{marginTop: '5%', fontSize:20}}>Don't have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/signup'>Sign Up</Link></div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n      loading? <CircularProgress color = 'dark' className = 'loading' />  :\r\n      <>\r\n       {showError()}\r\n       {signInForm()}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\admin\\recipebook\\src\\components\\navbar.js",["122","123","124","125","126","127"],"C:\\Users\\admin\\recipebook\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\actions\\categoryActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\actions\\recipeActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\types.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\allRecipe.js",["128","129","130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":8,"column":42,"nodeType":"138","messageId":"139","endLine":8,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":8,"column":68,"nodeType":"138","messageId":"139","endLine":8,"endColumn":70},{"ruleId":"140","severity":1,"message":"141","line":64,"column":44,"nodeType":"142","endLine":64,"endColumn":63},{"ruleId":"140","severity":1,"message":"141","line":84,"column":44,"nodeType":"142","endLine":84,"endColumn":63},{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":26},{"ruleId":"143","severity":1,"message":"147","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":76,"column":6,"nodeType":"151","endLine":76,"endColumn":8,"suggestions":"152"},{"ruleId":"140","severity":1,"message":"141","line":155,"column":89,"nodeType":"142","endLine":155,"endColumn":104},{"ruleId":"143","severity":1,"message":"153","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":22},{"ruleId":"143","severity":1,"message":"154","line":24,"column":10,"nodeType":"145","messageId":"146","endLine":24,"endColumn":23},{"ruleId":"143","severity":1,"message":"155","line":24,"column":25,"nodeType":"145","messageId":"146","endLine":24,"endColumn":41},{"ruleId":"149","severity":1,"message":"150","line":39,"column":6,"nodeType":"151","endLine":39,"endColumn":8,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":32,"column":6,"nodeType":"151","endLine":32,"endColumn":25,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"141","line":64,"column":76,"nodeType":"142","endLine":64,"endColumn":106},{"ruleId":"140","severity":1,"message":"141","line":78,"column":76,"nodeType":"142","endLine":78,"endColumn":106},{"ruleId":"149","severity":1,"message":"159","line":32,"column":5,"nodeType":"151","endLine":32,"endColumn":11,"suggestions":"160"},{"ruleId":"143","severity":1,"message":"161","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"162","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"143","severity":1,"message":"163","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":11},{"ruleId":"143","severity":1,"message":"164","line":17,"column":8,"nodeType":"145","messageId":"146","endLine":17,"endColumn":14},{"ruleId":"143","severity":1,"message":"165","line":52,"column":9,"nodeType":"145","messageId":"146","endLine":52,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":78,"column":35,"nodeType":"168","endLine":78,"endColumn":54},{"ruleId":"143","severity":1,"message":"153","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":22},{"ruleId":"143","severity":1,"message":"154","line":24,"column":10,"nodeType":"145","messageId":"146","endLine":24,"endColumn":23},{"ruleId":"143","severity":1,"message":"155","line":24,"column":25,"nodeType":"145","messageId":"146","endLine":24,"endColumn":41},{"ruleId":"149","severity":1,"message":"150","line":39,"column":6,"nodeType":"151","endLine":39,"endColumn":8,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'BottomNavigation' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'CardActionArea' is defined but never used.","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.",["173"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["175"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"177","fix":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},{"range":"187","text":"186"},"Update the dependencies array to be: [dispatch, props.match.params.id, recipeSaveSuccess]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.history, redirect, user]",{"range":"190","text":"191"},{"range":"192","text":"186"},[2862,2864],"[dispatch]",[1278,1280],[1211,1230],"[dispatch, props.match.params.id, recipeSaveSuccess]",[927,933],"[props.history, redirect, user]",[1298,1300]]