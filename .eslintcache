[{"C:\\Users\\pillo\\recipebook\\src\\App.js":"1","C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js":"2","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js":"3","C:\\Users\\pillo\\recipebook\\src\\redux\\types.js":"4","C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js":"5","C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js":"6","C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js":"7","C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js":"8","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\index.js":"9","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipe.js":"10","C:\\Users\\pillo\\recipebook\\src\\pages\\home.js":"11","C:\\Users\\pillo\\recipebook\\src\\pages\\newRecipes.js":"12","C:\\Users\\pillo\\recipebook\\src\\redux\\store.js":"13","C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js":"14","C:\\Users\\pillo\\recipebook\\src\\index.js":"15","C:\\Users\\pillo\\recipebook\\src\\components\\footer.js":"16","C:\\Users\\pillo\\recipebook\\src\\pages\\default.js":"17","C:\\Users\\pillo\\recipebook\\src\\pages\\about.js":"18","C:\\Users\\pillo\\recipebook\\src\\pages\\mainHomepage.js":"19","C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js":"20","C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js":"21","C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js":"22","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js":"23","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js":"24","C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js":"25","C:\\Users\\pillo\\recipebook\\src\\redux\\combineActions.js":"26","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\user.js":"27","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\category.js":"28","C:\\Users\\pillo\\recipebook\\src\\routes\\loggedInRoute.js":"29","C:\\Users\\pillo\\recipebook\\src\\pages\\searchPage.js":"30","C:\\Users\\pillo\\recipebook\\src\\components\\navbarLow.js":"31"},{"size":1855,"mtime":1611661100089,"results":"32","hashOfConfig":"33"},{"size":773,"mtime":1611498877209,"results":"34","hashOfConfig":"33"},{"size":3540,"mtime":1611673917003,"results":"35","hashOfConfig":"33"},{"size":2155,"mtime":1611498877208,"results":"36","hashOfConfig":"33"},{"size":8911,"mtime":1611675213347,"results":"37","hashOfConfig":"33"},{"size":4737,"mtime":1611675269427,"results":"38","hashOfConfig":"33"},{"size":6292,"mtime":1611675285898,"results":"39","hashOfConfig":"33"},{"size":16125,"mtime":1611673782692,"results":"40","hashOfConfig":"33"},{"size":160,"mtime":1611498851813,"results":"41","hashOfConfig":"33"},{"size":4087,"mtime":1611500126637,"results":"42","hashOfConfig":"33"},{"size":3431,"mtime":1611675125018,"results":"43","hashOfConfig":"33"},{"size":3296,"mtime":1611674551197,"results":"44","hashOfConfig":"33"},{"size":1406,"mtime":1611498877207,"results":"45","hashOfConfig":"33"},{"size":3558,"mtime":1611660712154,"results":"46","hashOfConfig":"33"},{"size":306,"mtime":1611498851803,"results":"47","hashOfConfig":"33"},{"size":158,"mtime":1611498877198,"results":"48","hashOfConfig":"33"},{"size":412,"mtime":1611498877200,"results":"49","hashOfConfig":"33"},{"size":183,"mtime":1611498877199,"results":"50","hashOfConfig":"33"},{"size":1599,"mtime":1611498877201,"results":"51","hashOfConfig":"33"},{"size":1109,"mtime":1611673888635,"results":"52","hashOfConfig":"33"},{"size":706,"mtime":1611498877208,"results":"53","hashOfConfig":"33"},{"size":4697,"mtime":1611674407741,"results":"54","hashOfConfig":"33"},{"size":3047,"mtime":1611498877206,"results":"55","hashOfConfig":"33"},{"size":905,"mtime":1611498877206,"results":"56","hashOfConfig":"33"},{"size":930,"mtime":1611498877206,"results":"57","hashOfConfig":"33"},{"size":58,"mtime":1611498851814,"results":"58","hashOfConfig":"33"},{"size":1429,"mtime":1611498877205,"results":"59","hashOfConfig":"33"},{"size":1022,"mtime":1611498877204,"results":"60","hashOfConfig":"33"},{"size":774,"mtime":1611498877209,"results":"61","hashOfConfig":"33"},{"size":4962,"mtime":1611674401114,"results":"62","hashOfConfig":"33"},{"size":4730,"mtime":1611660563112,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xgjjn2",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\pillo\\recipebook\\src\\App.js",[],"C:\\Users\\pillo\\recipebook\\src\\routes\\privateRoute.js",[],["130","131"],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\createCategory.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\types.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\recipeDetails.js",["132","133","134","135","136"],"C:\\Users\\pillo\\recipebook\\src\\pages\\signin.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\signup.js",[],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\createRecipe.js",["137"],"import React, { useEffect, useState } from 'react'\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { rbook } from '../redux/combineActions';\r\n\r\n//navigation\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material-ui\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n//styling for material-ui\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    marginBottom: '3%',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst CreateRecipe = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [ingredients1, setIngredients1] = useState('');\r\n  const [ingredients2, setIngredients2] = useState('');\r\n  const [ingredients3, setIngredients3] = useState('');\r\n  const [ingredients4, setIngredients4] = useState('');\r\n  const [ingredients5, setIngredients5] = useState('');\r\n  const [ingredients6, setIngredients6] = useState('');\r\n  const [ingredients7, setIngredients7] = useState('');\r\n  const [ingredients8, setIngredients8] = useState('');\r\n  const [ingredients9, setIngredients9] = useState('');\r\n  const [ingredients10, setIngredients10] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [instruction1, setInstruction1] = useState('');\r\n  const [instruction2, setInstruction2] = useState('');\r\n  const [instruction3, setInstruction3] = useState('');\r\n  const [instruction4, setInstruction4] = useState('');\r\n  const [instruction5, setInstruction5] = useState('');\r\n  const [instruction6, setInstruction6] = useState('');\r\n  const [instruction7, setInstruction7] = useState('');\r\n  const [instruction8, setInstruction8] = useState('');\r\n  const [instruction9, setInstruction9] = useState('');\r\n  const [instruction10, setInstruction10] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [photo1, setPhoto1] = useState('');\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n  const { loading, recipe, error, success } = useSelector(state => state.addRecipe);\r\n  const { categories } = useSelector(state => state.listCategories);\r\n\r\n  const recipeBy = user.name;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipe) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipe]);\r\n\r\n  useEffect(() => {\r\n    dispatch(rbook.category.listCategories());\r\n    return () => {\r\n    //\r\n    };\r\n  }, [])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const payload = {\r\n      name,\r\n      description,\r\n      category,\r\n      recipeBy,\r\n      ingredients,\r\n      ingredients1,\r\n      ingredients2,\r\n      ingredients3,\r\n      ingredients4,\r\n      ingredients5,\r\n      ingredients6,\r\n      ingredients7,\r\n      ingredients8,\r\n      ingredients9,\r\n      ingredients10,\r\n      instruction,\r\n      instruction1,\r\n      instruction2,\r\n      instruction3,\r\n      instruction4,\r\n      instruction5,\r\n      instruction6,\r\n      instruction7,\r\n      instruction8,\r\n      instruction9,\r\n      instruction10,\r\n      photo,\r\n      photo1\r\n    }\r\n    dispatch(rbook.recipe.addRecipe(payload));\r\n    setOpenSnackBar(true)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const showError = () => (\r\n    <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={openSnackBar} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert severity=\"error\">{error}</Alert>\r\n    </Snackbar>\r\n  );\r\n\r\n  const showSuccess= () => (\r\n    <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={openSnackBar} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert severity=\"success\">{recipe && recipe.name} added in recipes!</Alert>\r\n    </Snackbar>\r\n  );\r\n\r\n  const addRecipeForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Create new recipe here</center>\r\n    <div className = 'container'>\r\n      {success && !error && showSuccess()}\r\n      {!success && error && showError()}\r\n      <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Name of the recipe</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n            id = 'name'\r\n            name = 'name'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            multiline\r\n            name=\"description\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            rows={4}\r\n            variant=\"filled\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\r\n          <Select\r\n            native\r\n\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            inputProps={{\r\n              name: 'category',\r\n              id: 'category',\r\n            }}\r\n          >\r\n            <option>Select category</option>\r\n            {categories &&\r\n             categories.map((c, i) => (\r\n               <option key={i} value={c._id}>\r\n                   {c.name}\r\n               </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 1 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients(e.target.value)}\r\n\r\n            required\r\n            id = 'ingredients'\r\n            name = 'ingredients'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 2 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients1(e.target.value)}\r\n\r\n            required\r\n            id = 'ingredients1'\r\n            name = 'ingredients1'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 3 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients2(e.target.value)}\r\n\r\n            required\r\n            id = 'ingredients2'\r\n            name = 'ingredients2'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 4 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients3(e.target.value)}\r\n\r\n            id = 'ingredients3'\r\n            name = 'ingredients3'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 5 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients4(e.target.value)}\r\n\r\n            id = 'ingredients4'\r\n            name = 'ingredients4'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 6 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients5(e.target.value)}\r\n\r\n            id = 'ingredients5'\r\n            name = 'ingredients5'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 7 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients6(e.target.value)}\r\n\r\n            id = 'ingredients6'\r\n            name = 'ingredients6'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 8 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients7(e.target.value)}\r\n\r\n            id = 'ingredients7'\r\n            name = 'ingredients7'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 9 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients8(e.target.value)}\r\n\r\n            id = 'ingredients8'\r\n            name = 'ingredients8'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 10 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients9(e.target.value)}\r\n\r\n            id = 'ingredients9'\r\n            name = 'ingredients9'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Ingredient 11 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setIngredients10(e.target.value)}\r\n\r\n            id = 'ingredients10'\r\n            name = 'ingredients10'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 1 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction(e.target.value)}\r\n\r\n            required\r\n            id = 'instruction'\r\n            name = 'instruction'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 2 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction1(e.target.value)}\r\n\r\n            required\r\n            id = 'instruction1'\r\n            name = 'instruction1'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 3 (required)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction2(e.target.value)}\r\n\r\n            required\r\n            id = 'instruction2'\r\n            name = 'instruction2'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 4 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction3(e.target.value)}\r\n\r\n            id = 'instruction3'\r\n            name = 'instruction3'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 5 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction4(e.target.value)}\r\n\r\n            id = 'instruction4'\r\n            name = 'instruction4'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 6 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction5(e.target.value)}\r\n\r\n            id = 'instruction5'\r\n            name = 'instruction5'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 7 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction6(e.target.value)}\r\n\r\n            id = 'instruction6'\r\n            name = 'instruction6'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 8 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction7(e.target.value)}\r\n\r\n            id = 'instruction7'\r\n            name = 'instruction7'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 9 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction8(e.target.value)}\r\n\r\n            id = 'instruction8'\r\n            name = 'instruction8'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 10 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction9(e.target.value)}\r\n\r\n            id = 'instruction9'\r\n            name = 'instruction9'\r\n          />\r\n        </FormControl>\r\n        <FormControl className={(classes.margin, classes.textField)}>\r\n          <InputLabel color=\"primary\">Instruction 11 (if necesarry)</InputLabel>\r\n          <Input\r\n            type = \"text\"\r\n            onChange={(e) => setInstruction10(e.target.value)}\r\n\r\n            id = 'instruction10'\r\n            name = 'instruction10'\r\n          />\r\n        </FormControl>\r\n        <div className={classes.root}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            name = 'photo'\r\n            onChange={(e) => setPhoto(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"photo1\"\r\n          type=\"file\"\r\n          name = 'photo1'\r\n          onChange={(e) => setPhoto1(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo1\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Details Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button startIcon={<SaveIcon />} variant=\"contained\" type=\"submit\">Save Recipe</Button>\r\n        <center style = {{marginTop: '1%', fontSize: 20}} ><Link className = 'adminLinks' to = '/admin'>Go back to admin page</Link></center>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  document.title = 'Recipebook | CreateRecipe'\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading1' /> :\r\n    <>\r\n     {addRecipeForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateRecipe;\r\n","C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\index.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\recipe.js",[],["138","139"],"C:\\Users\\pillo\\recipebook\\src\\pages\\home.js",["140","141","142"],"C:\\Users\\pillo\\recipebook\\src\\pages\\newRecipes.js",["143"],"C:\\Users\\pillo\\recipebook\\src\\redux\\store.js",[],["144","145"],"C:\\Users\\pillo\\recipebook\\src\\components\\navbar.js",[],"C:\\Users\\pillo\\recipebook\\src\\index.js",[],"C:\\Users\\pillo\\recipebook\\src\\components\\footer.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\default.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\about.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\mainHomepage.js",[],"C:\\Users\\pillo\\recipebook\\src\\adminPage\\adminPage.js",[],"C:\\Users\\pillo\\recipebook\\src\\routes\\adminRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\allRecipe.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\recipeReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\categoryReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\reducers\\userReducers.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\combineActions.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\user.js",[],"C:\\Users\\pillo\\recipebook\\src\\redux\\actions\\category.js",[],"C:\\Users\\pillo\\recipebook\\src\\routes\\loggedInRoute.js",[],"C:\\Users\\pillo\\recipebook\\src\\pages\\searchPage.js",["146"],"C:\\Users\\pillo\\recipebook\\src\\components\\navbarLow.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":16,"column":8,"nodeType":"153","messageId":"154","endLine":16,"endColumn":18},{"ruleId":"151","severity":1,"message":"155","line":40,"column":9,"nodeType":"153","messageId":"154","endLine":40,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":51,"column":6,"nodeType":"158","endLine":51,"endColumn":24,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":117,"column":93,"nodeType":"162","endLine":117,"endColumn":123},{"ruleId":"160","severity":1,"message":"161","line":131,"column":93,"nodeType":"162","endLine":131,"endColumn":123},{"ruleId":"156","severity":1,"message":"163","line":96,"column":6,"nodeType":"158","endLine":96,"endColumn":8,"suggestions":"164"},{"ruleId":"147","replacedBy":"165"},{"ruleId":"149","replacedBy":"166"},{"ruleId":"151","severity":1,"message":"167","line":43,"column":11,"nodeType":"153","messageId":"154","endLine":43,"endColumn":15},{"ruleId":"151","severity":1,"message":"168","line":44,"column":11,"nodeType":"153","messageId":"154","endLine":44,"endColumn":19},{"ruleId":"156","severity":1,"message":"163","line":51,"column":6,"nodeType":"158","endLine":51,"endColumn":8,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"163","line":42,"column":6,"nodeType":"158","endLine":42,"endColumn":8,"suggestions":"170"},{"ruleId":"147","replacedBy":"171"},{"ruleId":"149","replacedBy":"172"},{"ruleId":"156","severity":1,"message":"173","line":79,"column":6,"nodeType":"158","endLine":79,"endColumn":24,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["177"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["178"],["175"],["176"],"'user' is assigned a value but never used.","'userInfo' is assigned a value but never used.",["179"],["180"],["175"],["176"],"React Hook useEffect has missing dependencies: 'history' and 'searchKeyword'. Either include them or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [dispatch, props.match.params.id, recipeReviewSave]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"193"},"Update the dependencies array to be: [handleRecipeList, history, searchKeyword]",{"range":"196","text":"197"},[1549,1567],"[dispatch, props.match.params.id, recipeReviewSave]",[3339,3341],"[dispatch]",[1442,1444],[1165,1167],[2376,2394],"[handleRecipeList, history, searchKeyword]"]