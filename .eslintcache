[{"C:\\Users\\admin\\recipebook\\src\\index.js":"1","C:\\Users\\admin\\recipebook\\src\\App.js":"2","C:\\Users\\admin\\recipebook\\src\\redux\\store.js":"3","C:\\Users\\admin\\recipebook\\src\\pages\\about.js":"4","C:\\Users\\admin\\recipebook\\src\\pages\\default.js":"5","C:\\Users\\admin\\recipebook\\src\\pages\\signup.js":"6","C:\\Users\\admin\\recipebook\\src\\adminPage\\createCategory.js":"7","C:\\Users\\admin\\recipebook\\src\\adminPage\\adminPage.js":"8","C:\\Users\\admin\\recipebook\\src\\routes\\adminRoute.js":"9","C:\\Users\\admin\\recipebook\\src\\components\\footer.js":"10","C:\\Users\\admin\\recipebook\\src\\routes\\privateRoute.js":"11","C:\\Users\\admin\\recipebook\\src\\adminPage\\createRecipe.js":"12","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\userReducers.js":"13","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\categoryReducers.js":"14","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\recipeReducers.js":"15","C:\\Users\\admin\\recipebook\\src\\pages\\home.js":"16","C:\\Users\\admin\\recipebook\\src\\pages\\recipeDetails.js":"17","C:\\Users\\admin\\recipebook\\src\\pages\\signin.js":"18","C:\\Users\\admin\\recipebook\\src\\components\\navbar.js":"19","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\userActions.js":"20","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\categoryActions.js":"21","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\recipeActions.js":"22","C:\\Users\\admin\\recipebook\\src\\redux\\types.js":"23","C:\\Users\\admin\\recipebook\\src\\pages\\allRecipe.js":"24"},{"size":306,"mtime":1608890157261,"results":"25","hashOfConfig":"26"},{"size":1603,"mtime":1609418227003,"results":"27","hashOfConfig":"26"},{"size":1237,"mtime":1609476155905,"results":"28","hashOfConfig":"26"},{"size":139,"mtime":1608890157262,"results":"29","hashOfConfig":"26"},{"size":372,"mtime":1608890157262,"results":"30","hashOfConfig":"26"},{"size":3630,"mtime":1609353210077,"results":"31","hashOfConfig":"26"},{"size":2340,"mtime":1609353279471,"results":"32","hashOfConfig":"26"},{"size":1082,"mtime":1608890157258,"results":"33","hashOfConfig":"26"},{"size":706,"mtime":1608890157267,"results":"34","hashOfConfig":"26"},{"size":213,"mtime":1609338337861,"results":"35","hashOfConfig":"26"},{"size":695,"mtime":1608890157267,"results":"36","hashOfConfig":"26"},{"size":14723,"mtime":1609353391934,"results":"37","hashOfConfig":"26"},{"size":1026,"mtime":1608890157266,"results":"38","hashOfConfig":"26"},{"size":1018,"mtime":1608890157265,"results":"39","hashOfConfig":"26"},{"size":3027,"mtime":1609434918609,"results":"40","hashOfConfig":"26"},{"size":3341,"mtime":1609476252167,"results":"41","hashOfConfig":"26"},{"size":7657,"mtime":1609425997501,"results":"42","hashOfConfig":"26"},{"size":2704,"mtime":1609353239379,"results":"43","hashOfConfig":"26"},{"size":3792,"mtime":1609418481982,"results":"44","hashOfConfig":"26"},{"size":1382,"mtime":1608890157265,"results":"45","hashOfConfig":"26"},{"size":1157,"mtime":1608890157264,"results":"46","hashOfConfig":"26"},{"size":6137,"mtime":1609690008524,"results":"47","hashOfConfig":"26"},{"size":1970,"mtime":1609433511256,"results":"48","hashOfConfig":"26"},{"size":3163,"mtime":1609690092247,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6dwin1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\recipebook\\src\\index.js",[],["107","108"],"C:\\Users\\admin\\recipebook\\src\\App.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\store.js",["109","110"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { recipeListReducer, recipeDetailsReducer, recipeAddReducer, recipeAddReviewsReducer, recipeListAllReducer, recipeListRateReducer } from './reducers/recipeReducers';\r\nimport { userRegisterReducer, userLoginReducer } from './reducers/userReducers';\r\nimport { categoryAddReducer, categoryListReducer } from './reducers/categoryReducers'\r\nimport Cookie from 'js-cookie';\r\n\r\nconst user = localStorage.getItem('jwt') && Cookie.getJSON('user') || null;\r\n\r\nconst initialState = {\r\n  userSignin: { user },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  recipeList: recipeListReducer,\r\n  recipeRate: recipeListRateReducer,\r\n  recipeListAll: recipeListAllReducer,\r\n  recipeDetails: recipeDetailsReducer,\r\n  userRegister: userRegisterReducer,\r\n  userSignin: userLoginReducer,\r\n  addCategory: categoryAddReducer,\r\n  listCategories: categoryListReducer,\r\n  addRecipe: recipeAddReducer,\r\n  addReview: recipeAddReviewsReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","C:\\Users\\admin\\recipebook\\src\\pages\\about.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\default.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\signup.js",["111","112"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../redux/actions/userActions';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Signup = (props) => {\r\n\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const { loading, user, error, success } = useSelector(state => state.userRegister);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [user]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(register(name, email, password, password2));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess= () => (\r\n    <center className=\"errorBox\" style={{ display: success ? '' : 'none' }}>\r\n        New account is created. You may now <Link style = {{color: 'blue', textDecoration:'none'}} to='/'>Sign In</Link>\r\n    </center>\r\n  );\r\n\r\n  const signUpForm = () => (\r\n    <>\r\n      <center className = 'welcomeTitle'>Sign Up here</center>\r\n      <div className = 'container'>\r\n        <form onSubmit = {submitHandler} className = 'form-container'>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' id = 'name'\r\n              label=\"Full name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              name = 'name'\r\n              type = 'text'\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' color = 'secondary' id = 'email'\r\n              label=\"Email Address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              name = 'email'\r\n              type=\"text\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' id = 'password'\r\n              label=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              name = 'password'\r\n              type=\"password\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" style = {{ marginTop:'1%' }}>\r\n            <TextField color = 'secondary' color = 'secondary' id = 'password2'\r\n              label=\"Confirm Password\"\r\n              onChange={(e) => setPassword2(e.target.value)}\r\n              name = 'password2'\r\n              type=\"password\"\r\n              style = {{width: '100%'}}\r\n              required\r\n            />\r\n          </div>\r\n          <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign Up</Button>\r\n          <div style = {{marginTop: '5%', fontSize:20}}>Have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/'>Sign In</Link></div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {signUpForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\admin\\recipebook\\src\\adminPage\\createCategory.js",[],"C:\\Users\\admin\\recipebook\\src\\adminPage\\adminPage.js",[],"C:\\Users\\admin\\recipebook\\src\\routes\\adminRoute.js",[],"C:\\Users\\admin\\recipebook\\src\\components\\footer.js",["113"],"import React from 'react'\r\nimport { BottomNavigation } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className = 'footer' >All rights reserved.</div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\admin\\recipebook\\src\\routes\\privateRoute.js",[],"C:\\Users\\admin\\recipebook\\src\\adminPage\\createRecipe.js",["114","115","116","117"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listCategories } from '../redux/actions/categoryActions';\r\nimport { addRecipe } from '../redux/actions/recipeActions'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst CreateRecipe = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [ingredients1, setIngredients1] = useState('');\r\n  const [ingredients2, setIngredients2] = useState('');\r\n  const [ingredients3, setIngredients3] = useState('');\r\n  const [ingredients4, setIngredients4] = useState('');\r\n  const [ingredients5, setIngredients5] = useState('');\r\n  const [ingredients6, setIngredients6] = useState('');\r\n  const [ingredients7, setIngredients7] = useState('');\r\n  const [ingredients8, setIngredients8] = useState('');\r\n  const [ingredients9, setIngredients9] = useState('');\r\n  const [ingredients10, setIngredients10] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [instruction1, setInstruction1] = useState('');\r\n  const [instruction2, setInstruction2] = useState('');\r\n  const [instruction3, setInstruction3] = useState('');\r\n  const [instruction4, setInstruction4] = useState('');\r\n  const [instruction5, setInstruction5] = useState('');\r\n  const [instruction6, setInstruction6] = useState('');\r\n  const [instruction7, setInstruction7] = useState('');\r\n  const [instruction8, setInstruction8] = useState('');\r\n  const [instruction9, setInstruction9] = useState('');\r\n  const [instruction10, setInstruction10] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [photo1, setPhoto1] = useState('');\r\n\r\n  const { loading, recipe, error, success } = useSelector(state => state.addRecipe);\r\n  const { categories } = useSelector(state => state.listCategories);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipe) {\r\n      //\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [recipe]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n    return () => {\r\n    //\r\n    };\r\n  }, [])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addRecipe(\r\n      name,\r\n      description,\r\n      category,\r\n      instruction,\r\n      instruction1,\r\n      instruction2,\r\n      instruction3,\r\n      instruction4,\r\n      instruction5,\r\n      instruction6,\r\n      instruction7,\r\n      instruction8,\r\n      instruction9,\r\n      instruction10,\r\n      ingredients,\r\n      ingredients1,\r\n      ingredients2,\r\n      ingredients3,\r\n      ingredients4,\r\n      ingredients5,\r\n      ingredients6,\r\n      ingredients7,\r\n      ingredients8,\r\n      ingredients9,\r\n      ingredients10,\r\n      photo,\r\n      photo1\r\n    ));\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n          style={{ display: error ? '' : 'none' }}\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <center className=\"errorBox text-info\" style={{ display: success ? '' : 'none' }}>\r\n      {recipe.name} recipe created!\r\n    </center>\r\n  );\r\n\r\n  const addRecipeForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Create new recipe here</center>\r\n    <div className = 'container'>\r\n      <form onSubmit = {submitHandler} className = 'form-container'>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter the name of the new recipe'\r\n           required\r\n           name = 'name'\r\n           id = 'name'\r\n           onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n           rows = '5'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           placeholder = \"Enter the description of the new recipe\"\r\n           required\r\n           name = 'description'\r\n           id = 'description'\r\n           onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" name = 'category' id = 'category' onChange={(e) => setCategory(e.target.value)}>\r\n            <option>Select category</option>\r\n            {categories &&\r\n             categories.map((c, i) => (\r\n               <option key={i} value={c._id}>\r\n                   {c.name}\r\n               </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 1 (required)'\r\n           name = 'ingredients'\r\n           id = 'ingredients'\r\n           onChange={(e) => setIngredients(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           label = 'Enter Ingredient 2 (required)'\r\n           name = 'ingredients1'\r\n           id = 'ingredients1'\r\n           onChange={(e) => setIngredients1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           label = 'Enter Ingredient 3 (required)'\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'ingredients2'\r\n           id = 'ingredients2'\r\n           onChange={(e) => setIngredients2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients3'\r\n           id = 'ingredients3'\r\n           label = 'Enter Ingredient 4 (if necessary)'\r\n           onChange={(e) => setIngredients3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'ingredients4'\r\n           label = 'Enter Ingredient 5 (if necessary)'\r\n           id = 'ingredients4'\r\n           onChange={(e) => setIngredients4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 6 (if necessary)'\r\n           name = 'ingredients5'\r\n           id = 'ingredients5'\r\n           onChange={(e) => setIngredients5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 7 (if necessary)'\r\n           name = 'ingredients6'\r\n           id = 'ingredients6'\r\n           onChange={(e) => setIngredients6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 8 (if necessary)'\r\n           name = 'ingredients7'\r\n           id = 'ingredients7'\r\n           onChange={(e) => setIngredients7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 9 (if necessary)'\r\n           name = 'ingredients8'\r\n           id = 'ingredients8'\r\n           onChange={(e) => setIngredients8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 10 (if necessary)'\r\n           name = 'ingredients9'\r\n           id = 'ingredients9'\r\n           onChange={(e) => setIngredients9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Ingredient 11 (if necessary)'\r\n           name = 'ingredients10'\r\n           id = 'ingredients10'\r\n           onChange={(e) => setIngredients10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           required\r\n           name = 'instruction'\r\n           label = 'Enter Instruction 1 (required)'\r\n           id = 'instruction'\r\n           onChange={(e) => setInstruction(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 2 (required)'\r\n           required\r\n           name = 'instruction1'\r\n           id = 'instruction1'\r\n           onChange={(e) => setInstruction1(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 3 (required)'\r\n           required\r\n           name = 'instruction2'\r\n           id = 'instruction2'\r\n           onChange={(e) => setInstruction2(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           name = 'instruction3'\r\n           label = 'Enter Instruction 4 (if necessary)'\r\n           id = 'instruction3'\r\n           onChange={(e) => setInstruction3(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 5 (if necessary)'\r\n           name = 'instruction4'\r\n           id = 'instruction4'\r\n           onChange={(e) => setInstruction4(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 6 (if necessary)'\r\n           name = 'instruction5'\r\n           id = 'instruction5'\r\n           onChange={(e) => setInstruction5(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 7 (if necessary)'\r\n           name = 'instruction6'\r\n           id = 'instruction6'\r\n           onChange={(e) => setInstruction6(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 8 (if necessary)'\r\n           name = 'instruction7'\r\n           id = 'instruction7'\r\n           onChange={(e) => setInstruction7(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 9 (if necessary)'\r\n           name = 'instruction8'\r\n           id = 'instruction8'\r\n           onChange={(e) => setInstruction8(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 10 (if necessary)'\r\n           name = 'instruction9'\r\n           id = 'instruction9'\r\n           onChange={(e) => setInstruction9(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <TextField color = 'secondary'\r\n           type = \"text\"\r\n           style = {{width: '100%'}}\r\n           label = 'Enter Instruction 11 (if necessary)'\r\n           name = 'instruction10'\r\n           id = 'instruction10'\r\n           onChange={(e) => setInstruction10(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"photo\"\r\n            type=\"file\"\r\n            name = 'photo'\r\n            onChange={(e) => setPhoto(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={classes.root}>\r\n          <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"photo1\"\r\n          type=\"file\"\r\n          name = 'photo1'\r\n          onChange={(e) => setPhoto1(e.target.files[0])}\r\n          />\r\n          <label htmlFor=\"photo1\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n              Upload Recipe Details Photo\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button startIcon={<SaveIcon />} variant=\"contained\" type=\"submit\">Save Recipe</Button>\r\n        <center style = {{marginTop: '1%', fontSize: 20}} ><Link className = 'adminLinks' to = '/admin'>Go back to admin page</Link></center>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> :\r\n    <>\r\n     {showSuccess()}\r\n     {showError()}\r\n     {addRecipeForm()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateRecipe;\r\n","C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\userReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\categoryReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\reducers\\recipeReducers.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\home.js",["118","119","120","121"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listRateRecipes } from '../redux/actions/recipeActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxHeight: \"100%\",\r\n    maxWidth: \"32rem\",\r\n    marginTop: '2rem'\r\n  },\r\n});\r\n\r\nconst Home = (props) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const recipeRate = useSelector(state => state.recipeRate);\r\n  const { recipes, loading, error } = recipeRate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n\r\n  useEffect(() => {\r\n    dispatch(listRateRecipes());\r\n    return () => {\r\n    //\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n      {user ? (\r\n         <>\r\n           <center className = 'welcomeTitle'>Here our most popular recipes</center>\r\n         </>\r\n       ) : (\r\n      null\r\n      )}\r\n      <div className = 'container'>\r\n      { recipes.length > 0 ? (\r\n        <>\r\n          {\r\n           recipes.map( recipes =>\r\n            <Card className={classes.root}>\r\n               <CardMedia\r\n                 component=\"img\"\r\n                 alt={recipes.name}\r\n                 height=\"500\"\r\n                 image={`/recipe/photo/${recipes._id}`}\r\n                 title=\"Contemplative Reptile\"\r\n               />\r\n               <CardContent>\r\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                   {recipes.name}\r\n                 </Typography>\r\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   {recipes.description}\r\n                 </Typography>\r\n                 <Typography style = {{marginTop:'2%'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                   <Rating readOnly value={recipes.rating}/> <div style = {{fontSize: \"1.5rem\"}}>{recipes.rating.toFixed(1)}</div>\r\n                 </Typography>\r\n               </CardContent>\r\n               <CardActions>\r\n                 <Link to = {`/recipe/${recipes._id}`}>\r\n                   <Button size=\"small\" color=\"primary\">\r\n                     Learn More\r\n                   </Button>\r\n                 </Link>\r\n               </CardActions>\r\n             </Card>\r\n            )\r\n           }\r\n         </>\r\n      ) : (\r\n        <div style = {{fontSize: '4rem'}} >No recipes found</div>\r\n      ) }\r\n      </div>\r\n      <center>\r\n        <Button style = {{marginTop:'3%'}} variant=\"contained\" color=\"primary\" href=\"/recipes\">\r\n          View All recipes\r\n        </Button>\r\n      </center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\admin\\recipebook\\src\\pages\\recipeDetails.js",["122","123","124"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsRecipe, saveRecipeReview } from '../redux/actions/recipeActions';\r\nimport { RECIPE_REVIEWS_ADD_RESET } from '../redux/types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst RecipeDetails = (props) => {\r\n  const [comment, setComment] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const recipeDetails = useSelector(state => state.recipeDetails);\r\n  const { user } = useSelector((state) => state.userSignin);\r\n  const {recipe, loading, error} = recipeDetails;\r\n  const recipeReviewSave = useSelector((state) => state.addReview);\r\n  const { success: recipeSaveSuccess } = recipeReviewSave;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (recipeSaveSuccess) {\r\n      alert('Comment successfully added.');\r\n      setComment('');\r\n      dispatch({ type: RECIPE_REVIEWS_ADD_RESET });\r\n    }\r\n    dispatch(detailsRecipe(props.match.params.id));\r\n    return () => {\r\n    //\r\n    };\r\n  }, [recipeSaveSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n  e.preventDefault();\r\n  // dispatch actions\r\n  dispatch(\r\n    saveRecipeReview(props.match.params.id, {\r\n      name: user.name,\r\n      rating: rating,\r\n      comment: comment,\r\n      userRole: user.role\r\n    })\r\n  );\r\n};\r\n\r\n\r\n  return (\r\n    loading? <CircularProgress color = 'dark' className = 'loading' /> : error? <div>{error}</div> :\r\n    <>\r\n     <center className = 'recipeName'>{recipe.name}</center>\r\n     <div className = 'details-container'>\r\n       <div className = 'card'>\r\n         <img\r\n           src={`/recipe/photo1/${recipe._id}`}\r\n           style={{ maxHeight: \"100%\", maxWidth: \"100%\", textAlign: 'center' }}\r\n           alt = {recipe.name}\r\n         />\r\n       </div>\r\n       <div style={{ maxWidth: \"30rem\", maxHeight: \"30rem\"  }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Description:</b></div>\r\n         <div>{recipe.description}</div>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\" }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Ingredients:</b></div>\r\n         <li style = {{ display: recipe.ingredients ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients}</i></li>\r\n         <li style = {{ display: recipe.ingredients1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients1}</i></li>\r\n         <li style = {{ display: recipe.ingredients2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients2}</i></li>\r\n         <li style = {{ display: recipe.ingredients3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients3}</i></li>\r\n         <li style = {{ display: recipe.ingredients4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients4}</i></li>\r\n         <li style = {{ display: recipe.ingredients5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients5}</i></li>\r\n         <li style = {{ display: recipe.ingredients6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients6}</i></li>\r\n         <li style = {{ display: recipe.ingredients7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients7}</i></li>\r\n         <li style = {{ display: recipe.ingredients8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients8}</i></li>\r\n         <li style = {{ display: recipe.ingredients9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients9}</i></li>\r\n         <li style = {{ display: recipe.ingredients10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.ingredients10}</i></li>\r\n       </div>\r\n       <div className = 'instruction-container' style={{ width: \"30rem\" }} className = 'description card'>\r\n         <div style = {{ fontSize: '1.5rem' }} ><b>Instructions:</b></div>\r\n         <li style = {{ display: recipe.instruction ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction}</i></li>\r\n         <li style = {{ display: recipe.instruction1 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction1}</i></li>\r\n         <li style = {{ display: recipe.instruction2 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction2}</i></li>\r\n         <li style = {{ display: recipe.instruction3 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction3}</i></li>\r\n         <li style = {{ display: recipe.instruction4 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction4}</i></li>\r\n         <li style = {{ display: recipe.instruction5 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction5}</i></li>\r\n         <li style = {{ display: recipe.instruction6 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction6}</i></li>\r\n         <li style = {{ display: recipe.instruction7 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction7}</i></li>\r\n         <li style = {{ display: recipe.instruction8 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction8}</i></li>\r\n         <li style = {{ display: recipe.instruction9 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction9}</i></li>\r\n         <li style = {{ display: recipe.instruction10 ? '' : 'none' }} ><i className = 'instructions'>{recipe.instruction10}</i></li>\r\n       </div>\r\n     </div>\r\n     <hr/>\r\n     <center>\r\n       <center className = 'welcomeTitle'>Reviews</center>\r\n       {recipe.reviews && recipe.reviews.length > 0 ? (\r\n         <div>\r\n           {recipe.reviews && recipe.reviews.map((review) => (\r\n             <div style = {{ marginTop: '1.5rem' }} key={review._id}>\r\n               { review.userRole === 1 ? (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name} (Admin)</b>\r\n               ) : (\r\n                 <b style = {{ fontSize: '1.2rem' }} >{review.name}</b>\r\n               ) }\r\n               <div><Rating readOnly value={review.rating}/></div>\r\n               <div style = {{ fontSize: '1.5rem' }} >{review.comment}</div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       ) : (\r\n         <h3>\r\n          There are no reviews in this recipe. Write the first one\r\n         </h3>\r\n       )}\r\n       <hr/>\r\n       <center className = 'welcomeTitle'>Rate this recipe</center>\r\n       <Rating\r\n         name=\"rating\"\r\n         id='rating'\r\n         value={rating}\r\n         onChange={(event, newValue) => {\r\n           setRating(newValue);\r\n         }}\r\n       />\r\n       <hr/>\r\n       <center className = 'welcomeTitle'>Write a comment here</center>\r\n       {user ? (\r\n         <div  className = 'container'>\r\n           <form className = 'form-container' onSubmit = {submitHandler}>\r\n             <div class=\"form-group\">\r\n               <textarea\r\n                rows = '5'\r\n                type = \"text\"\r\n                className = \"form-control\"\r\n                placeholder = \"Do you have comments in this recipe? Write here.\"\r\n                required\r\n                name = 'comment'\r\n                id = 'comment'\r\n                value = {comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n               />\r\n             </div>\r\n             <Button variant=\"contained\" type=\"submit\">Comment</Button>\r\n           </form>\r\n         </div>\r\n       ) : (\r\n         <div>\r\n           Please <Link to=\"/\">Sign-in</Link> to write a reviews.\r\n         </div>\r\n       )}\r\n     </center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecipeDetails;\r\n","C:\\Users\\admin\\recipebook\\src\\pages\\signin.js",["125"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../redux/actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField  from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Signin = (props) => {\r\n\r\n  const [values, setValues] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      redirectToReferrer: false\r\n  });\r\n\r\n  const { loading, user, error } = useSelector(state => state.userSignin);\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/home';\r\n\r\n\r\n  const { email, password } = values;\r\n\r\n  useEffect (() => {\r\n    if(user){\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  },[user])\r\n\r\n  const handleChange = name => event => {\r\n      setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  const showError = () => (\r\n      <center\r\n          className=\"errorBox text-danger\"\r\n      >\r\n          {error}\r\n      </center>\r\n  );\r\n\r\n  const signInForm = () => (\r\n    <>\r\n    <center className = 'welcomeTitle'>Sign In</center>\r\n    <div  className = 'container'>\r\n      <form className = 'form-container' onSubmit = {submitHandler}>\r\n        <div class=\"form-group\" style = {{ marginTop:'2%' }}>\r\n          <TextField color = 'secondary' type=\"email\"\r\n           name = 'email'\r\n           label = 'Email Address'\r\n           id = 'email'\r\n           style = {{width: '100%'}}\r\n           onChange={handleChange('email')}\r\n           required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\" style = {{ marginTop:'2%' }}>\r\n          <TextField color = 'secondary' type=\"password\"\r\n           name = 'password'\r\n           label = 'Password'\r\n           id = 'password'\r\n           style = {{width: '100%'}}\r\n           onChange={handleChange('password')}\r\n           required\r\n          />\r\n        </div>\r\n        <Button style = {{marginTop: '5%'}} variant=\"contained\" type=\"submit\">Sign In</Button>\r\n        <div style = {{marginTop: '5%', fontSize:20}}>Don't have an account? <Link style = {{color: 'gray', textDecoration:'none'}} to = '/signup'>Sign Up</Link></div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n      loading? <CircularProgress color = 'dark' className = 'loading' />  :\r\n      <>\r\n       {showError()}\r\n       {signInForm()}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\admin\\recipebook\\src\\components\\navbar.js",["126","127","128","129","130","131"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { listRecipes, listAllRecipes } from '../redux/actions/recipeActions';\r\nimport logo from '../images/recipebook.jpg';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../redux/actions/userActions';\r\nimport TextField  from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n//navigation\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst HideAppBar = (props) => {\r\n\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n   dispatch(listRecipes(searchKeyword));\r\n   dispatch(listAllRecipes(searchKeyword));\r\n   e.preventDefault();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  }\r\n\r\n  const homeReload = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = '/home';\r\n  }\r\n\r\n  const { user } = useSelector((state) => state.userSignin);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar className = 'appbar' style={{ background: '#000000' }}>\r\n          <Toolbar>\r\n          <ul>\r\n          <li className = 'title'><img src = {logo}/></li>\r\n            {user ? (\r\n              <>\r\n              <div>\r\n                <form onSubmit={submitHandler}>\r\n                  <TextField\r\n                   placeholder = 'Search for recipes?'\r\n                   className = 'searchBar'\r\n                   style = {{ marginTop: '3%' }}\r\n                   id=\"outlined-search\"\r\n                   type=\"search\"\r\n                   variant=\"outlined\"\r\n                   name=\"searchKeyword\"\r\n                   onChange={(e) => setSearchKeyword(e.target.value)}\r\n                  />\r\n                </form>\r\n              </div>\r\n                <li><Link onClick = {homeReload} to = '/home'>Home</Link></li>\r\n                <li><Link to = '/about'>About Us</Link></li>\r\n                {\r\n                  user && user.role === 1 ? (\r\n                    <li><Link to = '/admin'>Admin</Link></li>\r\n                  ) : (\r\n                    null\r\n                  )\r\n                }\r\n                <li><Link onClick={handleLogout}><ExitToAppIcon/></Link></li>\r\n              </>\r\n            ) : (\r\n              null\r\n            )}\r\n          </ul>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n      <Container>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HideAppBar\r\n","C:\\Users\\admin\\recipebook\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\actions\\categoryActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\actions\\recipeActions.js",[],"C:\\Users\\admin\\recipebook\\src\\redux\\types.js",[],"C:\\Users\\admin\\recipebook\\src\\pages\\allRecipe.js",["132","133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":8,"column":42,"nodeType":"142","messageId":"143","endLine":8,"endColumn":44},{"ruleId":"140","severity":1,"message":"141","line":8,"column":68,"nodeType":"142","messageId":"143","endLine":8,"endColumn":70},{"ruleId":"144","severity":1,"message":"145","line":64,"column":44,"nodeType":"146","endLine":64,"endColumn":63},{"ruleId":"144","severity":1,"message":"145","line":84,"column":44,"nodeType":"146","endLine":84,"endColumn":63},{"ruleId":"147","severity":1,"message":"148","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"151","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":18},{"ruleId":"147","severity":1,"message":"152","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":76,"column":6,"nodeType":"155","endLine":76,"endColumn":8,"suggestions":"156"},{"ruleId":"144","severity":1,"message":"145","line":155,"column":89,"nodeType":"146","endLine":155,"endColumn":104},{"ruleId":"147","severity":1,"message":"157","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":22},{"ruleId":"147","severity":1,"message":"158","line":25,"column":10,"nodeType":"149","messageId":"150","endLine":25,"endColumn":23},{"ruleId":"147","severity":1,"message":"159","line":25,"column":25,"nodeType":"149","messageId":"150","endLine":25,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":40,"column":6,"nodeType":"155","endLine":40,"endColumn":8,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":32,"column":6,"nodeType":"155","endLine":32,"endColumn":25,"suggestions":"162"},{"ruleId":"144","severity":1,"message":"145","line":64,"column":76,"nodeType":"146","endLine":64,"endColumn":106},{"ruleId":"144","severity":1,"message":"145","line":78,"column":76,"nodeType":"146","endLine":78,"endColumn":106},{"ruleId":"153","severity":1,"message":"163","line":32,"column":5,"nodeType":"155","endLine":32,"endColumn":11,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"165","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"166","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":18},{"ruleId":"147","severity":1,"message":"167","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":11},{"ruleId":"147","severity":1,"message":"168","line":17,"column":8,"nodeType":"149","messageId":"150","endLine":17,"endColumn":14},{"ruleId":"147","severity":1,"message":"169","line":52,"column":9,"nodeType":"149","messageId":"150","endLine":52,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":78,"column":35,"nodeType":"172","endLine":78,"endColumn":54},{"ruleId":"147","severity":1,"message":"157","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":22},{"ruleId":"147","severity":1,"message":"158","line":25,"column":10,"nodeType":"149","messageId":"150","endLine":25,"endColumn":23},{"ruleId":"147","severity":1,"message":"159","line":25,"column":25,"nodeType":"149","messageId":"150","endLine":25,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":40,"column":6,"nodeType":"155","endLine":40,"endColumn":8,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'BottomNavigation' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'CardActionArea' is defined but never used.","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.",["177"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["179"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"181","fix":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},{"range":"191","text":"190"},"Update the dependencies array to be: [dispatch, props.match.params.id, recipeSaveSuccess]",{"range":"192","text":"193"},"Update the dependencies array to be: [props.history, redirect, user]",{"range":"194","text":"195"},{"range":"196","text":"190"},[2862,2864],"[dispatch]",[1333,1335],[1211,1230],"[dispatch, props.match.params.id, recipeSaveSuccess]",[927,933],"[props.history, redirect, user]",[1345,1347]]